# /etc/nginx/sites-available/xcmaps

# Server block for HTTP requests (Port 80)
server {
    listen 80;
    listen [::]:80; # Listen on IPv6 as well

    # --- Replace with your actual domain name(s) ---
    server_name xcmaps.com www.xcmaps.com;

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Server block for HTTPS requests (Port 443)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2; # Listen on IPv6 as well

    # --- Replace with your actual domain name(s) ---
    server_name xcmaps.com www.xcmaps.com;

    # SSL Certificate Configuration
    # --- Replace with the actual paths to your certificate files ---
    ssl_certificate /etc/nginx/ssl/chained.pem;
    ssl_certificate_key /etc/nginx/ssl/xcmaps.key;

    # Recommended SSL Settings (Adjust if needed)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # Enable debug logging
    error_log /var/log/nginx/xcmaps-error.log debug;
    access_log /var/log/nginx/xcmaps-access.log;

    # Internal rewrite for /auth/admin to the admin console
    location = /auth/admin {
        # Rewrite the URL internally without redirecting
        rewrite ^ /auth/admin/master/console/ last;
    }

    # Special handling for login-status-iframe.html/init endpoint
    location ~ ^/auth/realms/[^/]+/protocol/openid-connect/login-status-iframe\.html/init {
        # Return a custom response for this endpoint
        add_header Content-Type application/json;
        add_header Access-Control-Allow-Origin https://xcmaps.com;
        add_header Access-Control-Allow-Credentials true;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
        
        # Return a simple JSON response indicating success
        return 200 '{"status":"connected"}';
    }

    # Special handling for all Keycloak paths
    location ~ ^/auth/ {
        # Enable aggressive response body modification
        sub_filter ':8080' '';
        sub_filter '":8080"' '""';
        sub_filter '"http:' '"https:';
        sub_filter 'http://' 'https://';
        sub_filter 'xcmaps.com:8080' 'xcmaps.com';
        sub_filter 'localhost:8080' 'xcmaps.com';
        sub_filter_once off;
        sub_filter_types *;

        # Forward to internal service
        proxy_pass http://localhost:3000;
        
        # Set necessary headers
        proxy_set_header Host xcmaps.com;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Port 443;
        
        # Increase buffer sizes for response modification
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    # Proxy settings for all other requests
    location / {
        # Forward requests to your Node.js app running on port 3000
        proxy_pass http://localhost:3000;

        # Set necessary headers for the backend application
        proxy_set_header Host xcmaps.com;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;

        # WebSocket support (if needed)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}