version: '3.8'

services:
  db:
    env_file: ".env"
    image: postgis/postgis:15-3.3
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-postgis.sh:/docker-entrypoint-initdb.d/init-postgis.sh
    networks:
      - app-network

  app:
    env_file: ".env"
    build: .
    restart: always
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - NODE_ENV=production
    volumes:
      - ./src:/usr/src/app/src
      - ./server.js:/usr/src/app/server.js
      - ./build:/usr/src/app/build
    networks:
      - app-network

  keycloak_db:
    image: postgres:15-alpine
    env_file: ".env"
    restart: always
    environment:
      - POSTGRES_USER=${KEYCLOAK_POSTGRES_USER}
      - POSTGRES_PASSWORD=${KEYCLOAK_POSTGRES_PASSWORD}
      - POSTGRES_DB=keycloak
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    networks:
      - app-network

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.0
    env_file: ".env"
    restart: always
    depends_on:
      - keycloak_db
    environment:
      - KC_DB=postgres
      - KC_DB_URL_HOST=keycloak_db
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_USERNAME=${KC_DB_USERNAME}
      - KC_DB_PASSWORD=${KC_DB_PASSWORD}
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_HTTP_RELATIVE_PATH=/auth
      - KC_PROXY=edge
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME=${KEYCLOAK_HOSTNAME}
      - KC_HOSTNAME_ADMIN=${KEYCLOAK_HOSTNAME}
    volumes:
      - ./keycloak-themes:/opt/keycloak/themes
    command: ["start-dev"]
    networks:
      - app-network

  nginx:
    image: nginx:1.25.3-alpine
    restart: always
    ports:
      - "3000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app
      - keycloak
    networks:
      - app-network

volumes:
  postgres_data:
  keycloak_data:

networks:
  app-network:
    driver: bridge
