{"version":3,"file":"js/main.749e0e79c2f5a403cf7c.js","mappings":"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","sources":["webpack://wind-station-app/./src/components/airspaces.js","webpack://wind-station-app/./src/public/assets/js/L.Control.Layers.Tree.js","webpack://wind-station-app/./src/components/windstations.js","webpack://wind-station-app/./src/components/spotsHelper.js","webpack://wind-station-app/./src/components/spotsPG.js","webpack://wind-station-app/./src/components/spotsHG.js","webpack://wind-station-app/./src/components/spotsLZ.js","webpack://wind-station-app/./src/public/assets/js/index.js"],"sourcesContent":["// airspaces.js\n\nfunction fetchAirspaces() {\n  // Make sure map is available\n  if (!window.map) {\n    console.error(\"Map not initialized yet\");\n    return;\n  }\n  \n  const center = window.map.getCenter();\n  const lat = center.lat.toFixed(6);\n  const lng = center.lng.toFixed(6);\n\n  // Use your proxy endpoint\n  const apiUrl = `http://localhost:3000/api/airspaces?lat=${lat}&lng=${lng}&dist=200000`;\n\n  fetch(apiUrl)\n    .then(response => response.json())\n    .then(data => {\n      // Clear existing layers\n      window.airspaceEFG.clearLayers();\n\n      const airspaces = []; // Store polygons and data for later use\n\n      data.items.forEach(airspace => {\n        if (airspace.type === 0 && airspace.icaoClass === 4) {\n          return;\n        }\n\n        if (airspace.geometry && airspace.geometry.type === \"Polygon\") {\n          const coordinates = airspace.geometry.coordinates[0].map(coord => [coord[1], coord[0]]);\n\n          const lowerLimit = airspace.lowerLimit.value;\n          const color = lowerLimit === 0 ? \"red\" : \"blue\";\n\n          const airspaceTypeText = airspaceTypes[airspace.type] || \"Unknown\";\n          const icaoClassText = icaoClasses[airspace.icaoClass] || \"Unknown\";\n\n          const polygon = L.polygon(coordinates, {\n            color: color,\n            weight: 2,\n            fillOpacity: 0.3\n          });\n\n          // Store airspace data with its polygon\n          airspaces.push({ polygon, data: airspace });\n\n          window.airspaceEFG.addLayer(polygon);\n        }\n      });\n\n      console.log(`Added ${airspaces.length} airspaces to the map`);\n\n      // Remove any existing click listeners to avoid duplicates\n      window.map.off(\"click.airspaces\");\n      \n      // Add click event to detect overlapping airspaces\n      window.map.on(\"click.airspaces\", function (e) {\n        const clickedPoint = e.latlng;\n        const overlappingAirspaces = [];\n\n        airspaces.forEach(({ polygon, data }) => {\n          if (polygon.getBounds().contains(clickedPoint)) {\n            overlappingAirspaces.push(data);\n          }\n        });\n\n        if (overlappingAirspaces.length > 0) {\n          const popupContent = overlappingAirspaces.map(a => `\n            <b>${a.name}</b><br>\n            Type: ${airspaceTypes[a.type] || \"Unknown\"}<br>\n            ICAO Class: ${icaoClasses[a.icaoClass] || \"Unknown\"}<br>\n            ↧${a.lowerLimit.value} ${getUnit(a.lowerLimit.unit)}  ↥${a.upperLimit.value} ${getUnit(a.upperLimit.unit)}<br>\n          `).join(\"<hr>\");\n\n          L.popup()\n            .setLatLng(clickedPoint)\n            .setContent(popupContent)\n            .openOn(window.map);\n        }\n      });\n    })\n    .catch(error => console.error(\"Error fetching airspaces:\", error));\n}\n\n// Lookup tables for airspace type and ICAO class\nconst airspaceTypes = {\n  0: \"Other\",\n  // ... other types\n};\n\nconst icaoClasses = {\n  0: \"A\",\n  // ... other classes\n};\n\nfunction getUnit(unitCode) {\n  const units = {\n    1: \"ft\", // Feet\n    6: \"FL\"  // Flight Level\n  };\n  return units[unitCode] || \"Unknown\";\n}\n\n// Export the fetchAirspaces function to make it globally available\nwindow.fetchAirspaces = fetchAirspaces;\n\n// Listen for map layer visibility changes\ndocument.addEventListener('map_initialized', function() {\n  console.log(\"Setting up airspace layer events\");\n  \n  // Add event listener for when the airspace layer is added to the map\n  window.map.on('overlayadd', function(e) {\n    if (e.name === 'Airspaces' || e.name === 'Gliding' || e.name === 'Notam') {\n      console.log(`Overlay added: ${e.name}, fetching airspaces`);\n      fetchAirspaces();\n    }\n  });\n  \n  // Also set up the moveend event to refresh airspaces when panning/zooming\n  window.map.on('moveend', function() {\n    // Only fetch if the layer is currently visible\n    if (window.map.hasLayer(window.airspaceEFG)) {\n      console.log(\"Map moved, refreshing airspaces\");\n      fetchAirspaces();\n    }\n  });\n});\n\n// Don't auto-fetch on script load - wait for the layer to be enabled\n// Remove or comment out: fetchAirspaces();","/*\n * Control like L.Control.Layers, but showing layers in a tree.\n * Do not forget to include the css file.\n */\nconsole.log(\"L.Control.Layers.Tree has been loaded!\");\n(function(L) {\n    if (typeof L === 'undefined') {\n        throw new Error('Leaflet must be included first');\n    }\n\n    /*\n     * L.Control.Layers.Tree extends L.Control.Layers because it reuses\n     * most of its functionality. Only the HTML creation is different.\n     */\n    L.Control.Layers.Tree = L.Control.Layers.extend({\n        options: {\n            closedSymbol: '+',\n            openedSymbol: '&minus;',\n            spaceSymbol: ' ',\n            selectorBack: false,\n            namedToggle: false,\n            collapseAll: '',\n            expandAll: '',\n            labelIsSelector: 'both',\n        },\n\n        // Class names are error prone texts, so write them once here\n        _initClassesNames: function() {\n            this.cls = {\n                children: 'leaflet-layerstree-children',\n                childrenNopad: 'leaflet-layerstree-children-nopad',\n                hide: 'leaflet-layerstree-hide',\n                closed: 'leaflet-layerstree-closed',\n                opened: 'leaflet-layerstree-opened',\n                space: 'leaflet-layerstree-header-space',\n                pointer: 'leaflet-layerstree-header-pointer',\n                header: 'leaflet-layerstree-header',\n                neverShow: 'leaflet-layerstree-nevershow',\n                node: 'leaflet-layerstree-node',\n                name: 'leaflet-layerstree-header-name',\n                label: 'leaflet-layerstree-header-label',\n                selAllCheckbox: 'leaflet-layerstree-sel-all-checkbox',\n            };\n        },\n\n        initialize: function(baseTree, overlaysTree, options) {\n            this._scrollTop = 0;\n            this._initClassesNames();\n            this._baseTree = null;\n            this._overlaysTree = null;\n            L.Util.setOptions(this, options);\n            L.Control.Layers.prototype.initialize.call(this, null, null, options);\n            this._setTrees(baseTree, overlaysTree);\n        },\n\n        setBaseTree: function(tree) {\n            return this._setTrees(tree);\n        },\n\n        setOverlayTree: function(tree) {\n            return this._setTrees(undefined, tree);\n        },\n\n        addBaseLayer: function(_layer, _name) {\n            throw 'addBaseLayer is disabled';\n        },\n\n        addOverlay: function(_layer, _name) {\n            throw 'addOverlay is disabled';\n        },\n\n        removeLayer: function(_layer) {\n            throw 'removeLayer is disabled';\n        },\n\n        collapse: function() {\n            this._scrollTop = this._sect().scrollTop;\n            return L.Control.Layers.prototype.collapse.call(this);\n        },\n\n        expand: function() {\n            L.Control.Layers.prototype.expand.call(this);\n            this._sect().scrollTop = this._scrollTop;\n        },\n\n        onAdd: function(map) {\n            function changeName(layer) {\n                if (layer._layersTreeName) {\n                    toggle.innerHTML = layer._layersTreeName;\n                }\n            }\n\n            var ret = L.Control.Layers.prototype.onAdd.call(this, map);\n            if (this.options.namedToggle) {\n                var toggle = this._container.getElementsByClassName('leaflet-control-layers-toggle')[0];\n                L.DomUtil.addClass(toggle, 'leaflet-layerstree-named-toggle');\n                // Start with this value...\n                map.eachLayer(function(layer) {changeName(layer);});\n                // ... and change it whenever the baselayer is changed.\n                map.on('baselayerchange', function(e) {changeName(e.layer);}, this);\n            }\n            return ret;\n        },\n\n        // Expands the whole tree (base other overlays)\n        expandTree: function(overlay) {\n            var container = overlay ? this._overlaysList : this._baseLayersList;\n            if (container) {\n                this._applyOnTree(container, false);\n            }\n            return this._localExpand();\n        },\n\n        // Collapses the whole tree (base other overlays)\n        collapseTree: function(overlay) {\n            var container = overlay ? this._overlaysList : this._baseLayersList;\n            if (container) {\n                this._applyOnTree(container, true);\n            }\n            return this._localExpand();\n        },\n\n        // Expands the tree, only to show the selected inputs\n        expandSelected: function(overlay) {\n            function iter(el) {\n                // Function to iterate the whole DOM upwards\n                var p = el.parentElement;\n                if (p) {\n                    if (L.DomUtil.hasClass(p, that.cls.children) &&\n                        !L.DomUtil.hasClass(el, that.cls.childrenNopad)) {\n                        L.DomUtil.removeClass(p, hide);\n                    }\n\n                    if (L.DomUtil.hasClass(p, that.cls.node)) {\n                        var h = p.getElementsByClassName(that.cls.header)[0];\n                        that._applyOnTree(h, false);\n                    }\n                    iter(p);\n                }\n            }\n\n            var that = this;\n            var container = overlay ? this._overlaysList : this._baseLayersList;\n            if (!container) return this;\n            var hide = this.cls.hide;\n            var inputs = this._layerControlInputs || container.getElementsByTagName('input');\n            for (var i = 0; i < inputs.length; i++) {\n                // Loop over every (valid) input.\n                var input = inputs[i];\n                if (this._getLayer && !!this._getLayer(input.layerId).overlay != !!overlay) continue;\n                if (input.checked) {\n                    // Get out of the header,\n                    // to not open the possible (but rare) children\n                    iter(input.parentElement.parentElement.parentElement.parentElement);\n                }\n            }\n            return this._localExpand();\n        },\n\n        // \"private\" methods, not exposed in the API\n        _sect: function() {\n            // to keep compatibility after 1.3 https://github.com/Leaflet/Leaflet/pull/6380\n            return this._section || this._form;\n        },\n\n        _setTrees: function(base, overlays) {\n            var id = 0; // to keep unique id\n            function iterate(tree, output, overlays) {\n                if (tree && tree.layer) {\n                    if (!overlays) {\n                        tree.layer._layersTreeName = tree.name || tree.label;\n                    }\n                    output[id++] = tree.layer;\n                }\n                if (tree && tree.children && tree.children.length) {\n                    tree.children.forEach(function(child) {\n                        iterate(child, output, overlays);\n                    });\n                }\n                return output;\n            }\n\n            // We accept arrays, but convert into an object with children\n            function forArrays(input) {\n                if (Array.isArray(input)) {\n                    return {noShow: true, children: input};\n                } else {\n                    return input;\n                }\n            }\n\n            // Clean everything, and start again.\n            if (this._layerControlInputs) {\n                this._layerControlInputs = [];\n            }\n            for (var i = 0; i < this._layers.length; ++i) {\n                this._layers[i].layer.off('add remove', this._onLayerChange, this);\n            }\n            this._layers = [];\n\n            if (base !== undefined) this._baseTree = forArrays(base);\n            if (overlays !== undefined) this._overlaysTree = forArrays(overlays);\n\n            var bflat = iterate(this._baseTree, {});\n            for (var j in bflat) {\n                this._addLayer(bflat[j], j);\n            }\n\n            var oflat = iterate(this._overlaysTree, {}, true);\n            for (var k in oflat) {\n                this._addLayer(oflat[k], k, true);\n            }\n            return (this._map) ? this._update() : this;\n        },\n\n        // Used to update the vertical scrollbar\n        _localExpand: function() {\n            if (this._map && L.DomUtil.hasClass(this._container, 'leaflet-control-layers-expanded')) {\n                var top = this._sect().scrollTop;\n                this.expand();\n                this._sect().scrollTop = top; // to keep the scroll location\n                this._scrollTop = top;\n            }\n            return this;\n        },\n\n        // collapses or expands the tree in the container.\n        _applyOnTree: function(container, collapse) {\n            var iters = [\n                {cls: this.cls.children, hide: collapse},\n                {cls: this.cls.opened, hide: collapse},\n                {cls: this.cls.closed, hide: !collapse},\n            ];\n            iters.forEach(function(it) {\n                var els = container.getElementsByClassName(it.cls);\n                for (var i = 0; i < els.length; i++) {\n                    var el = els[i];\n                    if (L.DomUtil.hasClass(el, this.cls.childrenNopad)) {\n                        // do nothing\n                    } else if (it.hide) {\n                        L.DomUtil.addClass(el, this.cls.hide);\n                    } else {\n                        L.DomUtil.removeClass(el, this.cls.hide);\n                    }\n                }\n            }, this);\n        },\n\n        // it is called in the original _update, and shouldn't do anything.\n        _addItem: function(_obj) {\n        },\n\n        // overwrite _update function in Control.Layers\n        _update: function() {\n            if (!this._container) { return this; }\n            L.Control.Layers.prototype._update.call(this);\n            this._addTreeLayout(this._baseTree, false);\n            this._addTreeLayout(this._overlaysTree, true);\n            return this._localExpand();\n        },\n\n        // Create the DOM objects for the tree\n        _addTreeLayout: function(tree, overlay) {\n            if (!tree) return;\n            var container = overlay ? this._overlaysList : this._baseLayersList;\n            this._expandCollapseAll(overlay, this.options.collapseAll, this.collapseTree);\n            this._expandCollapseAll(overlay, this.options.expandAll, this.expandTree);\n            this._iterateTreeLayout(tree, container, overlay, [], tree.noShow);\n            if (this._checkDisabledLayers) {\n                // to keep compatibility\n                this._checkDisabledLayers();\n            }\n        },\n\n        // Create the \"Collapse all\" or expand, if needed.\n        _expandCollapseAll: function(overlay, text, fn, ctx) {\n            var container = overlay ? this._overlaysList : this._baseLayersList;\n            ctx = ctx ? ctx : this;\n            if (text) {\n                var o = document.createElement('div');\n                o.className = 'leaflet-layerstree-expand-collapse';\n                container.appendChild(o);\n                o.innerHTML = text;\n                o.tabIndex = 0;\n                L.DomEvent.on(o, 'click keydown', function(e) {\n                    if (e.type !== 'keydown' || e.keyCode === 32) {\n                        o.blur();\n                        fn.call(ctx, overlay);\n                        this._localExpand();\n                    }\n                }, this);\n            }\n        },\n\n        // recursive function to create the DOM children\n        _iterateTreeLayout: function(tree, container, overlay, selAllNodes, noShow) {\n            if (!tree) return;\n            function creator(type, cls, append, innerHTML) {\n                var obj = L.DomUtil.create(type, cls, append);\n                if (innerHTML) obj.innerHTML = innerHTML;\n                return obj;\n            }\n\n            // create the header with it fields\n            var header = creator('div', this.cls.header, container);\n            var sel = creator('span');\n            var entry = creator('span');\n            var closed = creator('span', this.cls.closed, sel, this.options.closedSymbol);\n            var opened = creator('span', this.cls.opened, sel, this.options.openedSymbol);\n            var space = creator('span', this.cls.space, null, this.options.spaceSymbol);\n            if (this.options.selectorBack) {\n                sel.insertBefore(space, closed);\n                header.appendChild(entry);\n                header.appendChild(sel);\n            } else {\n                sel.appendChild(space);\n                header.appendChild(sel);\n                header.appendChild(entry);\n            }\n\n            function updateSelAllCheckbox(ancestor) {\n                var selector = ancestor.querySelector('input[type=checkbox]');\n                var selectedAll = true;\n                var selectedNone = true;\n                var inputs = ancestor.querySelectorAll('input[type=checkbox]');\n                [].forEach.call(inputs, function(inp) { // to work in node for tests\n                    if (inp === selector) {\n                        // ignore\n                    } else if (inp.indeterminate) {\n                        selectedAll = false;\n                        selectedNone = false;\n                    } else if (inp.checked) {\n                        selectedNone = false;\n                    } else if (!inp.checked) {\n                        selectedAll = false;\n                    }\n                });\n                if (selectedAll) {\n                    selector.indeterminate = false;\n                    selector.checked = true;\n                } else if (selectedNone) {\n                    selector.indeterminate = false;\n                    selector.checked = false;\n                } else {\n                    selector.indeterminate = true;\n                    selector.checked = false;\n                }\n            }\n\n            function manageSelectorsAll(input, ctx) {\n                selAllNodes.forEach(function(ancestor) {\n                    L.DomEvent.on(input, 'click', function(_ev) {\n                        updateSelAllCheckbox(ancestor);\n                    }, ctx);\n                }, ctx);\n            }\n\n            var selAll;\n            if (tree.selectAllCheckbox) {\n                selAll = this._createCheckboxElement(false);\n                selAll.className += ' ' + this.cls.selAllCheckbox;\n            }\n\n            var hide = this.cls.hide; // To toggle state\n            // create the children group, with the header event click\n            if (tree.children) {\n                var children = creator('div', this.cls.children, container);\n                var sensible = tree.layer ? sel : header;\n                L.DomUtil.addClass(sensible, this.cls.pointer);\n                sensible.tabIndex = 0;\n                L.DomEvent.on(sensible, 'click keydown', function(e) {\n                    // leaflet internal flag to prevent click propagation and collapsing tree on mobile browsers\n                    if (this._preventClick) {\n                        return;\n                    }\n                    if (e.type === 'keydown' && e.keyCode !== 32) {\n                        return;\n                    }\n                    sensible.blur();\n\n                    if (L.DomUtil.hasClass(opened, hide)) {\n                        // it is not opened, so open it\n                        L.DomUtil.addClass(closed, hide);\n                        L.DomUtil.removeClass(opened, hide);\n                        L.DomUtil.removeClass(children, hide);\n                    } else {\n                        // close it\n                        L.DomUtil.removeClass(closed, hide);\n                        L.DomUtil.addClass(opened, hide);\n                        L.DomUtil.addClass(children, hide);\n                    }\n                    this._localExpand();\n                }, this);\n                if (selAll) {\n                    selAllNodes.splice(0, 0, container);\n                }\n                tree.children.forEach(function(child) {\n                    var node = creator('div', this.cls.node, children);\n                    this._iterateTreeLayout(child, node, overlay, selAllNodes);\n                }, this);\n                if (selAll) {\n                    selAllNodes.splice(0, 1);\n                }\n            } else {\n                // no children, so the selector makes no sense.\n                L.DomUtil.addClass(sel, this.cls.neverShow);\n            }\n\n            // make (or not) the label clickable to toggle the layer\n            var labelType;\n            if (tree.layer) {\n                if ((this.options.labelIsSelector === 'both') || // if option is set to both\n                    (overlay && this.options.labelIsSelector === 'overlay') || // if an overlay layer and options is set to overlay\n                    (!overlay && this.options.labelIsSelector === 'base')) { // if a base layer and option is set to base\n                    labelType = 'label';\n                } else { // if option is set to something else\n                    labelType = 'span';\n                }\n            } else {\n                labelType = 'span';\n            }\n            // create the input and label\n            var label = creator(labelType, this.cls.label, entry);\n            if (tree.layer) {\n                // now create the element like in _addItem\n                var checked = this._map.hasLayer(tree.layer);\n                var input;\n                var radioGroup = overlay ? tree.radioGroup : 'leaflet-base-layers_' + L.Util.stamp(this);\n                if (radioGroup) {\n                    input = this._createRadioElement(radioGroup, checked);\n                } else {\n                    input = this._createCheckboxElement(checked);\n                    manageSelectorsAll(input, this);\n                }\n                if (this._layerControlInputs) {\n                    // to keep compatibility with 1.0.3\n                    this._layerControlInputs.push(input);\n                }\n                input.layerId = L.Util.stamp(tree.layer);\n                L.DomEvent.on(input, 'click', this._onInputClick, this);\n                label.appendChild(input);\n            }\n\n            function isText(variable) {\n                return (typeof variable === 'string' || variable instanceof String);\n            }\n\n            function isFunction(functionToCheck) {\n                return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';\n            }\n\n            function selectAllCheckboxes(select, ctx) {\n                var inputs = container.getElementsByTagName('input');\n                for (var i = 0; i < inputs.length; i++) {\n                    var input = inputs[i];\n                    if (input.type !== 'checkbox') continue;\n                    input.checked = select;\n                    input.indeterminate = false;\n                }\n                ctx._onInputClick();\n            }\n            if (tree.selectAllCheckbox) {\n                // selAll is already created\n                label.appendChild(selAll);\n                if (isText(tree.selectAllCheckbox)) {\n                    selAll.title = tree.selectAllCheckbox;\n                }\n                L.DomEvent.on(selAll, 'click', function(ev) {\n                    ev.stopPropagation();\n                    selectAllCheckboxes(selAll.checked, this);\n                }, this);\n                updateSelAllCheckbox(container);\n                manageSelectorsAll(selAll, this);\n            }\n\n            creator('span', this.cls.name, label, tree.label);\n\n            // hide the button which doesn't fit the collapsed state, then hide children conditionally\n            L.DomUtil.addClass(tree.collapsed ? opened : closed, hide);\n            tree.collapsed && children && L.DomUtil.addClass(children, hide);\n\n            if (noShow) {\n                L.DomUtil.addClass(header, this.cls.neverShow);\n                L.DomUtil.addClass(children, this.cls.childrenNopad);\n            }\n\n            var eventeds = tree.eventedClasses;\n            if (!(eventeds instanceof Array)) {\n                eventeds = [eventeds];\n            }\n\n            for (var e = 0; e < eventeds.length; e++) {\n                var evented = eventeds[e];\n                if (evented && evented.className) {\n                    var obj = container.querySelector('.' + evented.className);\n                    if (obj) {\n                        L.DomEvent.on(obj, evented.event || 'click', (function(selectAll) {\n                            return function(ev) {\n                                ev.stopPropagation();\n                                var select = isFunction(selectAll) ? selectAll(ev, container, tree, this._map) : selectAll;\n                                if (select !== undefined && select !== null) {\n                                    selectAllCheckboxes(select, this);\n                                }\n                            };\n                        })(evented.selectAll), this);\n                    }\n                }\n            }\n        },\n\n        _createCheckboxElement: function(checked) {\n            var input = document.createElement('input');\n            input.type = 'checkbox';\n            input.className = 'leaflet-control-layers-selector';\n            input.defaultChecked = checked;\n            return input;\n        },\n\n    });\n\n    L.control.layers.tree = function(base, overlays, options) {\n        return new L.Control.Layers.Tree(base, overlays, options);\n    };\n \n})(L);\nconsole.log(\"L.Control.Layers.Tree has been loaded!\");\n","\n\nfunction getCompassDirection(deg) {\n  const directions = [\n    \"N\", \"NNE\", \"NE\", \"ENE\", \"E\", \"ESE\", \"SE\", \"SSE\",\n    \"S\", \"SSW\", \"SW\", \"WSW\", \"W\", \"WNW\", \"NW\", \"NNW\",\n  ];\n  return directions[Math.round(deg / 22.5) % 16];\n}\n\nfunction getFillColor(speed) {\n  if (speed >= 7 && speed <= 14) return \"LimeGreen\";\n  if (speed >= 15 && speed <= 24) return \"yellow\";\n  if (speed >= 25 && speed <= 30) return \"orange\";\n  if (speed >= 31 && speed <= 36) return \"red\";\n  if (speed > 36) return \"black\";\n  return \"Aquamarine\";\n}\n\nfunction getStrokeColor(speed) {\n  if (speed >= 15 && speed <= 24) return \"LimeGreen\";\n  if (speed >= 25 && speed <= 32) return \"yellow\";\n  if (speed >= 33 && speed <= 38) return \"orange\";\n  if (speed >= 39 && speed <= 44) return \"red\";\n  if (speed > 44) return \"black\";\n  return \"Aquamarine\";\n}\n\nfunction getTextColor(backgroundColor) {\n  return backgroundColor === \"black\" ? \"white\" : \"black\";\n}\n\n// Helper: Process raw historical data into 10‑minute averages.\nfunction processHistoricalData(data) {\n  const grouped = {};\n  data.forEach((entry) => {\n    const dt = new Date(entry._id * 1000);\n    // Round down to the nearest 10‑minute mark.\n    dt.setMinutes(Math.floor(dt.getMinutes() / 10) * 10);\n    dt.setSeconds(0);\n    dt.setMilliseconds(0);\n    const key = dt.getTime();\n    if (!grouped[key]) {\n      grouped[key] = { count: 0, wAvgSum: 0, wMaxSum: 0, wDirSum: 0, tempSum: 0, tempCount: 0 };\n    }\n    grouped[key].count++;\n    grouped[key].wAvgSum += entry[\"w-avg\"];\n    grouped[key].wMaxSum += entry[\"w-max\"];\n    grouped[key].wDirSum += entry[\"w-dir\"];\n    if (entry[\"temp\"] !== undefined) {\n      grouped[key].tempSum += entry[\"temp\"];\n      grouped[key].tempCount++;\n    }\n  });\n  const result = Object.keys(grouped).map((key) => ({\n    _id: parseInt(key) / 1000, // back to seconds\n    \"w-avg\": grouped[key].wAvgSum / grouped[key].count,\n    \"w-max\": grouped[key].wMaxSum / grouped[key].count,\n    \"w-dir\": grouped[key].wDirSum / grouped[key].count,\n    \"temp\": grouped[key].tempCount > 0 ? grouped[key].tempSum / grouped[key].tempCount : undefined,\n  }));\n  // For the table we want descending order (most recent first).\n  result.sort((a, b) => b._id - a._id);\n  return result;\n}\n\n// Main function to fetch and display wind stations.\nfunction fetchWindStations() {\n    // Make sure the map exists before trying to use it\n    if (!window.map || typeof window.map.getBounds !== 'function') {\n      console.error('Map not properly initialized');\n      return;\n    }\n\n  const bounds = window.map.getBounds();\n  const nwLat = bounds.getNorthWest().lat;\n  const nwLng = bounds.getNorthWest().lng;\n  const seLat = bounds.getSouthEast().lat;\n  const seLng = bounds.getSouthEast().lng;\n  fetch(\n    `http://localhost:3000/api/wind-data-getCurrent?nwLat=${nwLat}&nwLng=${nwLng}&seLat=${seLat}&seLng=${seLng}`\n  )\n    .then((response) => response.json())\n    .then((responseData) => {\n      if (!Array.isArray(responseData)) {\n        throw new Error(\"Invalid data format received from API\");\n      }\n      // Clear previous markers.\n      windLayer.clearLayers();\n      console.log('Wind layers cleared'); // Add this\n\n      responseData.forEach((station) => {\n        const [lon, lat] = station.loc.coordinates;\n        const windDirection = station.last[\"w-dir\"];\n        const windAvg = station.last[\"w-avg\"];\n        const windMax = station.last[\"w-max\"];\n        const tempC = station.last[\"temp\"];\n        const compassDirection = getCompassDirection(windDirection);\n        const lastUpdate = new Date(station.last[\"_id\"] * 1000).toLocaleTimeString(\"de-DE\", {hour: \"2-digit\", minute: \"2-digit\", });\n        const fillColor = getFillColor(windAvg);\n        const strokeColor = getStrokeColor(windMax);\n        const peakArrow = station.peak ? \"▲\" : \"▼\";\n        const isHolfuy = station._id.includes(\"holfuy\");\n        let holfuyStationId = '';\n        if (isHolfuy) {\n          holfuyStationId = station._id.split(\"-\")[1];\n        }\n\n        // Create the SVG arrow icon.\n        const arrowSvg = `\n          <svg width=\"40\" height=\"40\" viewBox=\"0 0 800 900\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g transform=\"rotate(${windDirection + 90}, 400, 400)\" stroke=\"${strokeColor}\" stroke-width=\"60\">\n              <path d=\"M203,391 L75,144 L738,391 L75,637 L203,391 Z\" fill=\"${fillColor}\"/>\n            </g>\n            <text x=\"330\" y=\"850\" font-size=\"220\" text-anchor=\"middle\" fill=\"black\" font-weight=\"bold\">\n              ${peakArrow}${Math.round(windAvg)} / ${Math.round(windMax)}\n            </text>\n          </svg>`;\n\n        const arrowIcon = L.divIcon({\n          className: \"wind-arrow\",\n          html: arrowSvg,\n          iconSize: [40, 40],\n          iconAnchor: [12, 15],\n        });\n\n        // Create the marker.\n        const marker = L.marker([lat, lon], { icon: arrowIcon }).addTo(windLayer);\n\n        // Fetch historical data for this station.\n        fetch(\n          `https://winds.mobi/api/2.3/stations/${station._id}/historic/?duration=21000&keys=w-dir&keys=w-avg&keys=w-max&keys=temp`\n        )\n          .then((response) => response.json())\n          .then((historyData) => {\n            // Process historyData into 10‑minute averages.\n            const aggregatedData = processHistoricalData(historyData);\n\n            // --- TABLE SETUP (10‑minute averages, limited to last 5 hours) ---\n            const fiveHoursAgo = Date.now() - 5 * 60 * 60 * 1000;\n            const limitedData = aggregatedData.filter(\n              (entry) => entry._id * 1000 >= fiveHoursAgo\n            );\n            let historyTable = `<table border=\"1\" style=\"border-collapse: collapse; width: 100%; text-align: center;\">\n              <thead>\n                <tr>\n                  <th>Wind (m/s)</th>\n                  <th>Gusts (m/s)</th>\n                  <th>Direction</th>\n                  <th>Temp C°</th>\n                  <th>Time</th>\n                </tr>\n              </thead>\n              <tbody>`;\n            limitedData.forEach((entry) => {\n              const timeFormatted = new Date(entry._id * 1000).toLocaleTimeString(\"de-DE\", {\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n              });\n              const compassDir = getCompassDirection(entry[\"w-dir\"]);\n              historyTable += `<tr>\n                <td style=\"color: ${getTextColor(getFillColor(entry[\"w-avg\"]))}; background-color: ${getFillColor(entry[\"w-avg\"])};\">\n                  ${entry[\"w-avg\"].toFixed(1)}\n                </td>\n                <td style=\"color: ${getTextColor(getStrokeColor(entry[\"w-max\"]))}; background-color: ${getStrokeColor(entry[\"w-max\"])};\">\n                  ${entry[\"w-max\"].toFixed(1)}\n                </td>\n                <td>\n                  <span style=\"display: inline-block; transform: rotate(${entry[\"w-dir\"] + 180}deg);\"><strong>⬆ </strong></span>\n                  ${compassDir}\n                </td>\n                <td>${entry[\"temp\"] !== undefined ? entry[\"temp\"].toFixed(1) : \"N/A\"}</td>\n                <td>${timeFormatted}</td>\n              </tr>`;\n            });\n            historyTable += `</tbody></table>`;\n\n            // --- CHART SETUP (10‑minute averages with hourly vertical grid lines) ---\n            // For the chart we want ascending order (oldest first).\n            const chartData = aggregatedData.slice().reverse();\n\n            // Build the popup HTML with tabs.\n            const popupHtml = `\n              <div style=\"display: flex; gap: 1px; align-items: flex-start;\">\n                <div style=\"flex: 1;\">\n                  <strong>${station.short}</strong><br><br>\n                  <tag-name style=\"white-space:pre\">Wind Speed:&#9;&#9;${windAvg} km/h<br></tag-name>\n                  <tag-name style=\"white-space:pre\">Max Wind:&#9;&#9;${windMax} km/h<br></tag-name>\n                  <tag-name style=\"white-space:pre\">Wind Direction:&#9;${windDirection}° (${compassDirection})<br></tag-name>\n                  <tag-name style=\"white-space:pre\">Last Update:&#9;&#9;${lastUpdate}<br><br></tag-name>\n                </div>\n                ${isHolfuy ? `\n                  <div style=\"flex: 0 0 auto; width: 110px;\">\n                    <iframe src=\"https://widget.holfuy.com/?station=${holfuyStationId}&su=km/h&t=C&lang=en&mode=rose&size=110\"\n                      width=\"160\"\n                      height=\"110\"\n                      frameborder=\"0\"\n                      scrolling=\"no\">\n                    </iframe>\n                  </div>\n                ` : ''}\n              </div>\n              \n              <div class=\"tab-container\">\n                <div class=\"tab active\" onclick=\"showTab('table-${station._id}', this)\">Table</div>\n                <div class=\"tab\" onclick=\"showTab('chart-${station._id}', this)\">Chart</div>\n                <div class=\"tab\" id=\"camera-tab-${station._id}\" style=\"display: none;\" onclick=\"showTab('camera-${station._id}', this)\">Camera</div>\n              </div>\n              <div id=\"table-${station._id}\" class=\"tab-content\">\n                ${historyTable}\n              </div>\n              <div id=\"chart-${station._id}\" class=\"tab-content\" style=\"display: none;\">\n                <canvas id=\"canvas-${station._id}\" width=\"400\" height=\"200\"></canvas>\n              </div>\n              <div id=\"camera-${station._id}\" class=\"tab-content\" style=\"display: none;\">\n                <img id=\"camera-image-${station._id}\" src=\"\" alt=\"Camera Image\" style=\"width: 100%; height: auto;\">\n              </div>\n            `;\n\n            // Bind a responsive popup using the plugin.\n            marker.bindPopup(\n              L.responsivePopup({\n                hasTip: true,\n                autoPan: false,\n                offset: [15, 25],\n                maxWidth: 560,\n                maxHeight: 800,\n              }).setContent(popupHtml)\n            );\n\n            // When the popup is opened, initialize the chart.\n            // When the popup is opened, initialize the chart.\n            marker.on(\"popupopen\", () => {\n              setTimeout(() => {\n                const canvas = document.getElementById(`canvas-${station._id}`);\n                if (canvas) {\n                  canvas.style.height = \"300px\";\n                  const ctx = canvas.getContext(\"2d\");\n                  if (ctx) {\n                    // Transform chartData so that each point has an x (timestamp) and y (value)\n                    const chartDataPointsAvg = chartData.map((entry) => ({\n                      x: entry._id * 1000, // convert seconds to ms\n                      y: entry[\"w-avg\"],\n                    }));\n                    const chartDataPointsMax = chartData.map((entry) => ({\n                      x: entry._id * 1000,\n                      y: entry[\"w-max\"],\n                    }));\n\n                    const chartInstance = new Chart(ctx, {\n                      type: \"line\",\n                      data: {\n                        datasets: [\n                          {\n                            label: \"Wind Avg (km/h)\",\n                            data: chartDataPointsAvg,\n                            borderColor: \"blue\",\n                            fill: false,\n                            pointRadius: 3,\n                          },\n                          {\n                            label: \"Wind Max (km/h)\",\n                            data: chartDataPointsMax,\n                            borderColor: \"red\",\n                            fill: false,\n                            pointRadius: 3,\n                          },\n                        ],\n                      },\n                      options: {\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        layout: {\n                          // Add extra bottom padding so there's room for the arrows.\n                          padding: { bottom: 5 },\n                        },\n                        scales: {\n                          x: {\n                            type: \"time\",\n                            time: {\n                              unit: \"hour\",\n                              displayFormats: {\n                                hour: \"HH:mm\",\n                              },\n                              tooltipFormat: \"HH:mm\",\n                            },\n                            grid: {\n                              drawBorder: true,\n                            },\n                            ticks: {\n                              autoSkip: true,\n                              maxRotation: 0,\n                              minRotation: 0,\n                              padding: 30,\n                            },\n                          },\n                          y: {\n                            beginAtZero: true,\n                            ticks: {\n                              stepSize: 10,\n                              maxTicksLimit: 10,\n                              font: { size: 14 },\n                            },\n                          },\n                        },\n                        plugins: {\n                          legend: { display: false },\n                        },\n                      },\n                      plugins: [\n                        {\n                          id: \"windDirectionArrows\",\n                          afterDraw: (chart) => {\n                            const ctx = chart.ctx;\n                            const xAxis = chart.scales.x;\n                            ctx.save();\n                            // Position arrows just below the x-axis line \n                            const arrowRowY = xAxis.top + 20;\n                            \n                            // Set text properties for centered alignment\n                            ctx.textAlign = \"center\";\n                            ctx.textBaseline = \"middle\";\n                            \n                            chartData.forEach((entry) => {\n                              const x = xAxis.getPixelForValue(entry._id * 1000);\n                              ctx.save();\n                              ctx.translate(x, arrowRowY);\n                              ctx.rotate(((entry[\"w-dir\"] + 180) * Math.PI) / 180);\n                              ctx.font = \"18px Arial\";\n                              ctx.fillText(\"⬆\", 0, 0);\n                              ctx.restore();\n                            });\n                            ctx.restore();\n                          },\n                        },\n                      ],\n                      \n                    });\n                    canvas.chartInstance = chartInstance;\n                  } else {\n                    console.error(\"Failed to get 2D context from canvas.\");\n                  }\n                } else {\n                  console.error(\"Canvas element not found.\");\n                }\n                // Inside the popupopen event handler where camera handling happens:\n                if (station._id.includes(\"holfuy\")) {\n                  const holfuyStationId = station._id.split(\"-\")[1];\n                  const cameraImageUrl = `https://holfuy.com/en/takeit/cam/s${holfuyStationId}.jpg`;\n                  const cameraImageElement = document.getElementById(`camera-image-${station._id}`);\n                  const cameraTabElement = document.getElementById(`camera-tab-${station._id}`);\n                  \n                  // Create temporary image to test validity\n                  const testImage = new Image();\n                  testImage.onload = function() {\n                    // Only show tab if image loads successfully\n                    cameraImageElement.src = cameraImageUrl;\n                    cameraTabElement.style.display = \"block\";\n                  };\n                  testImage.onerror = function() {\n                    // Hide tab if image fails to load\n                    cameraTabElement.style.display = \"none\";\n                  };\n                  testImage.src = cameraImageUrl;\n                  \n                  // Set timeout as fallback in case responses are slow\n                  setTimeout(() => {\n                    if (!testImage.complete || testImage.naturalWidth === 0) {\n                      cameraTabElement.style.display = \"none\";\n                    }\n                  }, 2000);\n                }\n              }, 500);\n            });\n\n          })\n          .catch((error) =>\n            console.error(\"Error fetching historical wind data:\", error)\n          );\n      });\n    })\n    .catch((error) =>\n      console.error(\"Error fetching wind station data:\", error)\n    );\n}\n\n// Enhanced tab switching function.\nwindow.showTab = function (tabId, element) {\n  console.log(\"Switching to tab:\", tabId);\n\n  document.querySelectorAll(\".tab-content\").forEach((tab) => {\n    tab.style.display = \"none\";\n  });\n\n  document.querySelectorAll(\".tab\").forEach((tab) => {\n    tab.classList.remove(\"active\");\n  });\n\n  const targetTab = document.getElementById(tabId);\n  if (targetTab) {\n    targetTab.style.display = \"block\";\n  } else {\n    console.error(\"Tab not found:\", tabId);\n  }\n\n  if (element) {\n    element.classList.add(\"active\");\n  } else {\n    console.error(\"Element is null or undefined\");\n  }\n\n  if (tabId.startsWith(\"chart-\")) {\n    const stationId = tabId.split(\"chart-\")[1];\n    console.log(\"Station ID:\", stationId);\n\n    const canvas = document.getElementById(`canvas-${stationId}`);\n    if (canvas) {\n      console.log(\"Canvas found:\", canvas);\n\n      if (canvas.chartInstance) {\n        console.log(\"Updating chart...\");\n        canvas.chartInstance.resize();\n        canvas.chartInstance.update();\n      } else {\n        console.warn(\"Chart instance not found on canvas:\", canvas);\n      }\n    } else {\n      console.error(\"Canvas not found for station ID:\", stationId);\n    }\n  }\n};\n\n\n\n// Initial fetch of wind stations.\nwindow.fetchWindStations = fetchWindStations;\n\n","// spotsHelper.js - Common functionality for loading and displaying spots on a map\r\n\r\n// Swiper related functions\r\nfunction changeSwiper() {\r\n    if (typeof swiperc !== \"undefined\") {\r\n        if (window.innerWidth < 576) {\r\n            $(\".swiper2\").css(\"height\", \"\"); $(\".swiper2\").css(\"width\", \"320px\");\r\n            $(\".swiper2\").css(\"padding-left\", \"\"); $(\".swiper2\").css(\"padding-top\", \"30px\");\r\n            $(\".swiper2 > .swiper-wrapper\").css(\"width\", \"\"); $(\".swiper2 > .swiper-wrapper\").css(\"height\", \"100px\");\r\n            swiperc.changeDirection('horizontal', true);\r\n        }\r\n        else {\r\n            if (window.innerWidth < 840) {\r\n                $(\".swiper2\").css(\"width\", \"\"); $(\".swiper2\").css(\"height\", \"320px\");\r\n            }\r\n            else {\r\n                $(\".swiper2\").css(\"width\", \"\"); $(\".swiper2\").css(\"height\", \"460px\");\r\n            }\r\n            $(\".swiper2\").css(\"padding-top\", \"\"); $(\".swiper2\").css(\"padding-left\", \"30px\");\r\n            $(\".swiper2 > .swiper-wrapper\").css(\"height\", \"\"); $(\".swiper2 > .swiper-wrapper\").css(\"width\", \"100px\");\r\n            swiperc.changeDirection('vertical', true);\r\n        }\r\n    }\r\n}\r\n\r\nfunction initSwiper(idImg) {\r\n    let swiperv, swiperc;\r\n    // USED 09/24 Beschreibung: Initialisierung der Image-Swiper\r\n    var swiperLoop3 = (idImg < 4) ? false : true;\r\n    var swiperLoop4 = (idImg < 5) ? false : true;\r\n\r\n    swiperv = new Swiper('.swiper1', {\r\n        autoHeight: true,\r\n        direction: 'horizontal',\r\n        allowTouchMove: false,\r\n        mousewheel: false,\r\n        slidesPerView: 1,\r\n        loop: false,\r\n    });\r\n\r\n    swiperc = new Swiper('.swiper2', {\r\n        direction: 'vertical',\r\n        allowTouchMove: true,\r\n        mousewheel: true,\r\n        slidesPerView: 3,\r\n        spaceBetween: 10,\r\n        loop: swiperLoop3,\r\n        breakpoints: {\r\n            840: {\r\n                slidesPerView: 4,\r\n                loop: swiperLoop4\r\n            }\r\n        },\r\n        scrollbar: {\r\n            el: '.swiper-scrollbar',\r\n            hide: false,\r\n            draggable: true,\r\n        },\r\n        on: {\r\n            click: function() {\r\n                let iR = (this.clickedSlide.firstChild.id).substring(3) - 1;\r\n                swiperv.slideTo(iR, 1);\r\n            },\r\n            transitionEnd: function () {\r\n                let iR = this.realIndex;\r\n                swiperv.slideTo(iR, 1);\r\n            }\r\n        }\r\n    });\r\n\r\n    changeSwiper();\r\n}\r\n\r\n// Mapping wind directions to angles\r\nfunction getAngleRange(direction) {\r\n    const dirToAngle = {\r\n        \"N\": 0, \"NNE\": 22.5, \"NE\": 45, \"ENE\": 67.5,\r\n        \"E\": 90, \"ESE\": 112.5, \"SE\": 135, \"SSE\": 157.5,\r\n        \"S\": 180, \"SSW\": 202.5, \"SW\": 225, \"WSW\": 247.5,\r\n        \"W\": 270, \"WNW\": 292.5, \"NW\": 315, \"NNW\": 337.5\r\n    };\r\n\r\n    let angleRanges = [];\r\n    let parts = direction.split(',').map(part => part.trim());\r\n\r\n    parts.forEach(part => {\r\n        let range = part.split('-').map(dir => dir.trim());\r\n        if (range.length === 1) {\r\n            let angle = dirToAngle[range[0]];\r\n            if (angle !== undefined) {\r\n                angleRanges.push([angle - 22.5, angle + 22.5]);\r\n            }\r\n        } else if (range.length === 2) {\r\n            let start = dirToAngle[range[0]];\r\n            let end = dirToAngle[range[1]];\r\n            if (start !== undefined && end !== undefined) {\r\n                if (end < start) {\r\n                    [start, end] = [end, start];\r\n                }\r\n                if (end - start > 180) {\r\n                    [start, end] = [end, start];\r\n                }\r\n                angleRanges.push([start, end]);\r\n            }\r\n        }\r\n    });\r\n\r\n    return angleRanges;\r\n}\r\n\r\n// Fetch full place details when a popup is opened\r\nasync function loadPlaceDetails(layer, placeId) {\r\n    try {\r\n        const response = await fetch(`http://localhost:3000/api/places/${placeId}`);\r\n        const data = await response.json();\r\n\r\n        if (data.error) {\r\n            console.error(\"Error fetching place details:\", data.error);\r\n            return;\r\n        }\r\n\r\n        let regex1 = /<center><b><a href=\"http:\\/\\/www\\.paraglidingearth\\.com\\/index\\.php\\?site=\\d+\">More information on ParaglidingEarth<\\/a><\\/b><\\/center>\\n?/g;\r\n        let regex2 = /<br>\\n<b>Take off : <\\/b><br>\\n?/g;\r\n\r\n        let description = (data.properties.description || \"\")\r\n            .replace(regex1, \"\")\r\n            .replace(regex2, \"\")\r\n            .trim();\r\n\r\n        window.currentPlaceName = data.properties.name;\r\n\r\n        let popupContent = `<span style=\"color: #0087F7;\"><h5>${data.properties.name}</h5></span>\r\n                            <b>Type:</b> ${data.properties.type}<br>\r\n                            <b>Direction:</b> ${data.properties.direction}<br><br>\r\n                            <b>Description:</b> ${description}<br>\r\n                            <b>© <a href=\"https://paraglidingspots.com\" target=\"_blank\">paraglidingspots.com</a></b>\r\n                            <div class=\"modal-footer d-flex justify-content-between\">\r\n                            <div id=\"feedback-message\" class=\"text-start\"></div> <!-- Message on the left -->\r\n                            <div class=\"d-flex ms-auto\">\r\n                                <button class=\"btn btn-primary me-2\" onclick=\"showFeebackForm()\">Feedback/Correction</button>\r\n                                <button class=\"btn btn-dark close-popup\">Close</button>\r\n                            </div>\r\n                            </div>\r\n                            `;\r\n\r\n        // Apply maxWidth CSS directly to popup content if needed\r\n        popupContent += `<style>\r\n        /* Limit the height of the Swiper container */\r\n        .swiper-container {\r\n            max-height: 460px !important;\r\n            height: 460px !important;\r\n            overflow: hidden !important;\r\n        }\r\n\r\n        /* Ensure individual Swipers don't expand beyond this height */\r\n        .swiper, .swiper1, .swiper2 {\r\n            max-height: 460px !important;\r\n            height: 460px !important;\r\n            overflow: hidden !important;\r\n        }\r\n\r\n        /* Limit Swiper wrapper height */\r\n        .swiper-wrapper {\r\n            max-height: 460px !important;\r\n        }\r\n\r\n        /* Ensure Swiper slides don't stretch */\r\n        .swiper-slide {\r\n            max-height: 460px !important;\r\n            display: flex !important;\r\n            align-items: center !important; /* Keep images centered */\r\n            justify-content: center !important;\r\n        }\r\n\r\n        /* Prevent images from exceeding the swiper height */\r\n        .swiper-slide img {\r\n            max-height: 100% !important;\r\n            width: auto !important;\r\n        }\r\n        \r\n        /* Keep the overall popup size unchanged */\r\n        .leaflet-popup-content {\r\n            max-height: 780px !important; /* Keep original popup height */\r\n            overflow-y: auto; /* Allow scrolling inside the popup if needed */\r\n        }\r\n\r\n        .swiper-clear {\r\n            clear: both;\r\n            margin-bottom: 1px;\r\n        }\r\n        </style>`;\r\n\r\n        layer.setPopupContent(popupContent);\r\n\r\n        // Wait for the popup to open before initializing Swiper\r\n        setTimeout(() => {\r\n            let firstImg = document.querySelector(\".swiper1 .swiper-slide img\");\r\n            if (firstImg) {\r\n                let idImg = parseInt(firstImg.id.replace(/\\D/g, \"\"), 10) || 1;\r\n                initSwiper(idImg); // Call existing Swiper function\r\n            }\r\n    \r\n        }, 300);\r\n\r\n        setTimeout(() => {\r\n            document.querySelector(\".close-popup\").addEventListener(\"click\", function () {\r\n                map.closePopup();\r\n            });\r\n        }, 300);\r\n\r\n    } catch (error) {\r\n        console.error(\"Error fetching place details:\", error);\r\n    }\r\n}\r\n\r\nfunction showFeebackForm() {\r\n    let modalFooter = document.querySelector(\".modal-footer\");\r\n    if (modalFooter) modalFooter.style.display = \"none\";\r\n\r\n    let feedbackFormHtml = `\r\n        <div id=\"feedbackFormHtml\">\r\n        <div class=\"feedback-modal\">\r\n            <span style=\"color: #0087F7;\"><h5>Feedback for ${window.currentPlaceName}</h5></span>\r\n            <form id=\"feedbackForm\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"feedbackText\">Feedback / Correction / Comment:</label>\r\n                    <textarea id=\"feedbackText\" class=\"form-control\" required style=\"height: 130px;\"></textarea>\r\n                </div>\r\n                <!-- Dropzone for file upload -->\r\n                <div class=\"form-group\">\r\n                    <label>Upload Images (optional):</label>\r\n                    <div id=\"dropzoneFeedback\" class=\"dropzone mt-4 border-dashed rounded-2 min-h-0\"></div>\r\n                </div>\r\n                <div class=\"form-group d-flex justify-content-between\">\r\n                    <div style=\"width: 48%;\">\r\n                        <label for=\"userName\">Name:</label>\r\n                        <input type=\"text\" id=\"userName\" class=\"form-control\" required>\r\n                    </div>\r\n                    <div style=\"width: 48%;\">\r\n                        <label for=\"userEmail\">E-Mail:</label>\r\n                        <input type=\"email\" id=\"userEmail\" class=\"form-control\" required>\r\n                        <small class=\"text-danger d-none\" id=\"emailError\">Please enter a valid email address.</small>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-success\">Submit</button>\r\n                <button type=\"button\" class=\"btn btn-secondary\" onclick=\"cancelFeedback()\">Cancel</button>\r\n            </form>\r\n        </div>\r\n        </div>\r\n    `;\r\n\r\n    let popup = document.querySelector(\".leaflet-popup-content\");\r\n    if (popup) {\r\n        popup.insertAdjacentHTML(\"beforeend\", feedbackFormHtml);\r\n    } else {\r\n        console.error(\"Popup content not found!\");\r\n        return;\r\n    }\r\n\r\n    let uploadedFiles = []; // Store files in an array\r\n\r\n    let dropzone = new Dropzone(\"#dropzoneFeedback\", {\r\n        url: \"/upload\", // This won't be used since we disable auto uploads\r\n        autoProcessQueue: false, // Prevent immediate upload\r\n        maxFiles: 5,\r\n        maxFilesize: 100, // Max file size in MB\r\n        acceptedFiles: \"image/*\", // Only accept image files\r\n        addRemoveLinks: false, // Disable default remove link\r\n        dictDefaultMessage: \"Drag & drop files here or click to upload\",\r\n        clickable: true,\r\n        init: function () {\r\n            let dzInstance = this; // Store Dropzone instance\r\n\r\n            this.on(\"addedfile\", function (file) {\r\n                console.log(\"File added:\", file.name);\r\n            \r\n                let previewElement = file.previewElement;\r\n                let imageContainer = previewElement.querySelector(\".dz-image\"); // Ensure it's inside the image div\r\n            \r\n                if (!imageContainer) {\r\n                    console.error(\"dz-image container not found for:\", file.name);\r\n                    return;\r\n                }\r\n            \r\n                let deleteIcon = document.createElement(\"img\");\r\n                deleteIcon.src = \"/assets/images/imgdelete.png\"; // Ensure the path is correct\r\n                deleteIcon.alt = \"Delete\";\r\n                deleteIcon.classList.add(\"delete-icon\");\r\n            \r\n                // Append delete icon to the image container\r\n                imageContainer.appendChild(deleteIcon);\r\n            \r\n                console.log(\"Delete icon added for:\", file.name);\r\n            \r\n                deleteIcon.addEventListener(\"click\", function (e) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation(); // Prevent triggering Dropzone click events\r\n                    console.log(\"Delete icon clicked for:\", file.name);\r\n            \r\n                    dzInstance.removeFile(file);\r\n                });\r\n            });\r\n            \r\n\r\n            this.on(\"removedfile\", function (file) {\r\n                console.log(\"File removed:\", file.name); // Log file removed\r\n                uploadedFiles = uploadedFiles.filter(f => f !== file);\r\n            });\r\n        }\r\n    });\r\n\r\n\r\n    document.getElementById(\"userEmail\").addEventListener(\"input\", function () {\r\n        let isValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(this.value);\r\n        document.getElementById(\"emailError\").classList.toggle(\"d-none\", isValid);\r\n    });\r\n\r\n    document.getElementById(\"feedbackForm\").addEventListener(\"submit\", async function (event) {\r\n        event.preventDefault();\r\n    \r\n        let formData = new FormData();\r\n        formData.append(\"feedbackText\", document.getElementById(\"feedbackText\").value);\r\n        formData.append(\"userName\", document.getElementById(\"userName\").value);\r\n        formData.append(\"userEmail\", document.getElementById(\"userEmail\").value);\r\n        \r\n        let dropzoneFiles = Dropzone.forElement(\"#dropzoneFeedback\").files;\r\n        dropzoneFiles.forEach(file => {\r\n            formData.append(\"images\", file);\r\n        });\r\n\r\n        let response = await fetch(\"http://localhost:3000/api/send-feedback\", {\r\n            method: \"POST\",\r\n            body: formData\r\n        });\r\n    \r\n        let result = await response.json();\r\n    \r\n        // Hide the entire feedback form container\r\n        document.getElementById(\"feedbackFormHtml\").style.display = \"none\";\r\n\r\n        // Show the modal footer\r\n        document.querySelector(\".modal-footer\").style.display = \"flex\";\r\n\r\n        // Get the message div\r\n        let messageDiv = document.getElementById(\"feedback-message\");\r\n\r\n        // Set message text properly\r\n        if (result.success && typeof result.success === \"string\") {\r\n            messageDiv.textContent = result.success;\r\n            messageDiv.classList.remove(\"text-danger\");\r\n            messageDiv.classList.add(\"text-success\");\r\n        } else if (result.success === true) {\r\n            messageDiv.textContent = \"Feedback submitted successfully!\";\r\n            messageDiv.classList.remove(\"text-danger\");\r\n            messageDiv.classList.add(\"text-success\");\r\n        } else {\r\n            messageDiv.textContent = result.error || \"An error occurred.\";\r\n            messageDiv.classList.remove(\"text-success\");\r\n            messageDiv.classList.add(\"text-danger\");\r\n        }\r\n    });\r\n}\r\n\r\nfunction cancelFeedback() {\r\n    // Hide the feedback form\r\n    document.getElementById(\"feedbackFormHtml\").style.display = \"none\";\r\n    // Show the modal footer again\r\n    document.querySelector(\".modal-footer\").style.display = \"flex\";\r\n}\r\n\r\n// Export functions to be used by other modules\r\nexport {\r\n    changeSwiper,\r\n    initSwiper,\r\n    getAngleRange,\r\n    loadPlaceDetails,\r\n    showFeebackForm,\r\n    cancelFeedback\r\n};","import { \r\n    getAngleRange, \r\n    loadPlaceDetails, \r\n    showFeebackForm, \r\n    cancelFeedback \r\n} from './spotsHelper.js';\r\n\r\n// Use a module initialization function that waits for map to be ready\r\nexport function initSpotPG() {\r\n    // Check if map and placesLayerPG are available in the window object\r\n    if (!window.map || !window.placesLayerPG) {\r\n        console.error(\"Map or placesLayerPG is not defined. Retrying in 500ms...\");\r\n        setTimeout(initSpotPG, 500);\r\n        return;\r\n    }\r\n\r\n    console.log(\"Initializing PG spots module...\");\r\n\r\n    // Expose needed functions to global scope for event handlers\r\n    window.showFeebackForm = showFeebackForm;\r\n    window.cancelFeedback = cancelFeedback;\r\n\r\n    // Create cluster group and nest it in the existing layer group\r\n    const clusterGroup = L.markerClusterGroup({\r\n        disableClusteringAtZoom: 9,\r\n        spiderfyOnMaxZoom: true,\r\n        showCoverageOnHover: true,\r\n        zoomToBoundsOnClick: true,\r\n        maxClusterRadius: 250,\r\n        iconCreateFunction: function(cluster) {\r\n            return L.divIcon({ \r\n                html: `<div class=\"cluster-marker\">${cluster.getChildCount()}</div>`,\r\n                className: 'pg-cluster-icon',\r\n                iconSize: L.point(30, 30)\r\n            });\r\n        }\r\n    });\r\n\r\n    window.placesLayerPG.addLayer(clusterGroup);\r\n\r\n    // Fetch places without descriptions\r\n    function fetchPlaces() {\r\n        const bounds = window.map.getBounds();\r\n        const nw_lat = bounds.getNorthWest().lat;\r\n        const nw_lng = bounds.getNorthWest().lng;\r\n        const se_lat = bounds.getSouthEast().lat;\r\n        const se_lng = bounds.getSouthEast().lng;\r\n\r\n        fetch(`http://localhost:3000/api/places?nw_lat=${nw_lat}&nw_lng=${nw_lng}&se_lat=${se_lat}&se_lng=${se_lng}&type=TO&type=TOW&type=TH`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                clusterGroup.clearLayers();\r\n\r\n                L.geoJSON(data, {\r\n                    pointToLayer: function (feature, latlng) {\r\n                        return L.marker(latlng, {\r\n                            icon: L.canvasIcon({\r\n                                iconSize: [50, 50],\r\n                                iconAnchor: [15, 15],\r\n                                drawIcon: function (icon, type) {\r\n                                    if (type === 'icon') {\r\n                                        var ctx = icon.getContext('2d');\r\n                                        var size = L.point(this.options.iconSize);\r\n                                        var center = L.point(size.x / 2, size.y / 2);\r\n                                        ctx.clearRect(0, 0, size.x, size.y);\r\n\r\n                                        let direction = feature.properties.direction || \"\";\r\n                                        let angleRanges = getAngleRange(direction);\r\n\r\n                                        ctx.beginPath();\r\n                                        angleRanges.forEach(([start, end]) => {\r\n                                            ctx.moveTo(center.x, center.y);\r\n                                            ctx.arc(center.x, center.y, center.x, (start - 90) * Math.PI / 180, (end - 90) * Math.PI / 180, false);\r\n                                            ctx.lineTo(center.x, center.y);\r\n                                        });\r\n                                        ctx.fillStyle = 'orange';\r\n                                        ctx.fill();\r\n                                        ctx.closePath();\r\n\r\n                                        ctx.beginPath();\r\n                                        ctx.arc(center.x, center.y, center.x / 4, 0, Math.PI * 2);\r\n                                        ctx.fillStyle = 'green';\r\n                                        ctx.fill();\r\n                                        ctx.closePath();\r\n                                    }\r\n                                }\r\n                            })\r\n                        });\r\n                    },\r\n                    onEachFeature: function (feature, layer) {\r\n                        if (feature.properties) {\r\n                            let popupContent = `<b>${feature.properties.name}</b><br>\r\n                                                Type: ${feature.properties.type}<br>\r\n                                                Direction: ${feature.properties.direction}<br>\r\n                                                <i>Loading details...</i>`;\r\n\r\n                            let responsivePopup = L.responsivePopup({\r\n                                hasTip: true,\r\n                                autoPan: false,\r\n                                offset: [15, 25],\r\n                                maxWidth: 900,\r\n                                maxHeight: 780\r\n                            }).setContent(popupContent);\r\n\r\n                            layer.bindPopup(responsivePopup);\r\n\r\n                            layer.on(\"popupopen\", async function () {\r\n                                await loadPlaceDetails(layer, feature.properties.id);\r\n                            });\r\n                        }\r\n                        \r\n                        clusterGroup.addLayer(layer);\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => console.error(\"Error fetching PG places:\", error));\r\n    }\r\n\r\n    // Fetch places when the map stops moving\r\n    window.map.on(\"moveend\", fetchPlaces);\r\n\r\n    // Initial load\r\n    fetchPlaces();\r\n    console.log(\"PG spots module initialized\");\r\n}\r\n\r\n// Listen for map initialization event\r\ndocument.addEventListener(\"map_initialized\", function() {\r\n    console.log(\"Map initialized event received in PG spots module\");\r\n    setTimeout(initSpotPG, 100);\r\n});\r\n\r\n// Alternative initialization approach\r\nsetTimeout(() => {\r\n    if (window.mapInitialized) {\r\n        console.log(\"Backup initialization for PG spots module\");\r\n        initSpotPG();\r\n    }\r\n}, 1000);","import { \r\n    getAngleRange, \r\n    loadPlaceDetails, \r\n    showFeebackForm, \r\n    cancelFeedback \r\n} from './spotsHelper.js';\r\n\r\n// Use a module initialization function that waits for map to be ready\r\nexport function initSpotHG() {\r\n    // Check if map and placesLayerHG are available in the window object\r\n    if (!window.map || !window.placesLayerHG) {\r\n        console.error(\"Map or placesLayerHG is not defined. Retrying in 500ms...\");\r\n        setTimeout(initSpotHG, 500);\r\n        return;\r\n    }\r\n\r\n    console.log(\"Initializing HG spots module...\");\r\n\r\n    // Expose needed functions to global scope for event handlers\r\n    window.showFeebackForm = showFeebackForm;\r\n    window.cancelFeedback = cancelFeedback;\r\n\r\n    // Create cluster group and nest it in the existing layer group\r\n    const clusterGroup = L.markerClusterGroup({\r\n        disableClusteringAtZoom: 9,\r\n        spiderfyOnMaxZoom: true,\r\n        showCoverageOnHover: true,\r\n        zoomToBoundsOnClick: true,\r\n        maxClusterRadius: 250,\r\n        iconCreateFunction: function(cluster) {\r\n            return L.divIcon({ \r\n                html: `<div class=\"cluster-marker\">${cluster.getChildCount()}</div>`,\r\n                className: 'hg-cluster-icon',\r\n                iconSize: L.point(30, 30)\r\n            });\r\n        }\r\n    });\r\n\r\n    window.placesLayerHG.addLayer(clusterGroup);\r\n\r\n    // Fetch places without descriptions\r\n    function fetchPlaces() {\r\n        const bounds = window.map.getBounds();\r\n        const nw_lat = bounds.getNorthWest().lat;\r\n        const nw_lng = bounds.getNorthWest().lng;\r\n        const se_lat = bounds.getSouthEast().lat;\r\n        const se_lng = bounds.getSouthEast().lng;\r\n\r\n        fetch(`http://localhost:3000/api/places?nw_lat=${nw_lat}&nw_lng=${nw_lng}&se_lat=${se_lat}&se_lng=${se_lng}&type=TO-HG&type=TOW-HG`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                clusterGroup.clearLayers();\r\n\r\n                L.geoJSON(data, {\r\n                    pointToLayer: function (feature, latlng) {\r\n                        return L.marker(latlng, {\r\n                            icon: L.canvasIcon({\r\n                                iconSize: [50, 50],\r\n                                iconAnchor: [15, 15],\r\n                                drawIcon: function (icon, type) {\r\n                                    if (type === 'icon') {\r\n                                        var ctx = icon.getContext('2d');\r\n                                        var size = L.point(this.options.iconSize);\r\n                                        var center = L.point(size.x / 2, size.y / 2);\r\n                                        ctx.clearRect(0, 0, size.x, size.y);\r\n\r\n                                        let direction = feature.properties.direction || \"\";\r\n                                        let angleRanges = getAngleRange(direction);\r\n\r\n                                        ctx.beginPath();\r\n                                        angleRanges.forEach(([start, end]) => {\r\n                                            ctx.moveTo(center.x, center.y);\r\n                                            ctx.arc(center.x, center.y, center.x, (start - 90) * Math.PI / 180, (end - 90) * Math.PI / 180, false);\r\n                                            ctx.lineTo(center.x, center.y);\r\n                                        });\r\n                                        ctx.fillStyle = 'orange';\r\n                                        ctx.fill();\r\n                                        ctx.closePath();\r\n\r\n                                        ctx.beginPath();\r\n                                        ctx.arc(center.x, center.y, center.x / 4, 0, Math.PI * 2);\r\n                                        ctx.fillStyle = 'green';\r\n                                        ctx.fill();\r\n                                        ctx.closePath();\r\n                                    }\r\n                                }\r\n                            })\r\n                        });\r\n                    },\r\n                    onEachFeature: function (feature, layer) {\r\n                        if (feature.properties) {\r\n                            let popupContent = `<b>${feature.properties.name}</b><br>\r\n                                                Type: ${feature.properties.type}<br>\r\n                                                Direction: ${feature.properties.direction}<br>\r\n                                                <i>Loading details...</i>`;\r\n\r\n                            let responsivePopup = L.responsivePopup({\r\n                                hasTip: true,\r\n                                autoPan: false,\r\n                                offset: [15, 25],\r\n                                maxWidth: 900,\r\n                                maxHeight: 780\r\n                            }).setContent(popupContent);\r\n\r\n                            layer.bindPopup(responsivePopup);\r\n\r\n                            layer.on(\"popupopen\", async function () {\r\n                                await loadPlaceDetails(layer, feature.properties.id);\r\n                            });\r\n                        }\r\n                        \r\n                        clusterGroup.addLayer(layer);\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => console.error(\"Error fetching HG places:\", error));\r\n    }\r\n\r\n    // Fetch places when the map stops moving\r\n    window.map.on(\"moveend\", fetchPlaces);\r\n\r\n    // Initial load\r\n    fetchPlaces();\r\n    console.log(\"HG spots module initialized\");\r\n}\r\n\r\n// Listen for map initialization event\r\ndocument.addEventListener(\"map_initialized\", function() {\r\n    console.log(\"Map initialized event received in HG spots module\");\r\n    setTimeout(initSpotHG, 100);\r\n});\r\n\r\n// Alternative initialization approach\r\nsetTimeout(() => {\r\n    if (window.mapInitialized) {\r\n        console.log(\"Backup initialization for HG spots module\");\r\n        initSpotHG();\r\n    }\r\n}, 1000);","import { \r\n    getAngleRange, \r\n    loadPlaceDetails, \r\n    showFeebackForm, \r\n    cancelFeedback \r\n} from './spotsHelper.js';\r\n\r\n// Use a module initialization function that waits for map to be ready\r\n// Replace the existing markerClusterGroup creation with:\r\nexport function initSpotLZ() {\r\n    if (!window.map || !window.placesLayerLZ) {\r\n        setTimeout(initSpotLZ, 500);\r\n        return;\r\n    }\r\n\r\n    console.log(\"Initializing LZ spots module...\");\r\n\r\n    // Create cluster group and nest it in the existing layer group\r\n    const clusterGroup = L.markerClusterGroup({\r\n        disableClusteringAtZoom: 9,\r\n        spiderfyOnMaxZoom: true,\r\n        showCoverageOnHover: true,\r\n        zoomToBoundsOnClick: true,\r\n        maxClusterRadius: 250,\r\n        iconCreateFunction: function(cluster) {\r\n            return L.divIcon({ \r\n                html: `<div class=\"cluster-marker\">${cluster.getChildCount()}</div>`,\r\n                className: 'lz-cluster-icon',\r\n                iconSize: L.point(30, 30)\r\n            });\r\n        }\r\n    });\r\n\r\n    window.placesLayerLZ.addLayer(clusterGroup); // Add cluster group to the layer group\r\n\r\n    // Update fetchPlaces to use clusterGroup\r\n    function fetchPlaces() {\r\n        const bounds = window.map.getBounds();\r\n        const nw_lat = bounds.getNorthWest().lat;\r\n        const nw_lng = bounds.getNorthWest().lng;\r\n        const se_lat = bounds.getSouthEast().lat;\r\n        const se_lng = bounds.getSouthEast().lng;\r\n\r\n        fetch(`http://localhost:3000/api/places?nw_lat=${nw_lat}&nw_lng=${nw_lng}&se_lat=${se_lat}&se_lng=${se_lng}&type=LZ`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                clusterGroup.clearLayers(); // Clear the cluster group\r\n\r\n                L.geoJSON(data, {\r\n                    pointToLayer: function (feature, latlng) {\r\n                        return L.marker(latlng, {\r\n                            icon: L.icon({\r\n                                iconUrl: '../assets/images/windsock.png', // Replace with the actual path to your PNG\r\n                                iconSize: [20, 20], // Adjust size as needed\r\n                                iconAnchor: [20, 20] // Adjust anchor to center the image properly\r\n                            })\r\n                        });\r\n                    },\r\n                    onEachFeature: function (feature, layer) {\r\n                        if (feature.properties) {\r\n                            let popupContent = `<b>${feature.properties.name}</b><br>\r\n                                                Type: ${feature.properties.type}<br>\r\n                                                Direction: ${feature.properties.direction}<br>\r\n                                                <i>Loading details...</i>`;\r\n\r\n                            let responsivePopup = L.responsivePopup({\r\n                                hasTip: true,\r\n                                autoPan: false,\r\n                                offset: [15, 25],\r\n                                maxWidth: 900,\r\n                                maxHeight: 780\r\n                            }).setContent(popupContent);\r\n\r\n                            layer.bindPopup(responsivePopup);\r\n\r\n                            // Fetch details when popup is opened\r\n                            layer.on(\"popupopen\", async function () {\r\n                                await loadPlaceDetails(layer, feature.properties.id);\r\n                            });\r\n                           \r\n                        }\r\n                        \r\n                        clusterGroup.addLayer(layer); // Add to clusterGroup\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => console.error(\"Error:\", error));\r\n    }\r\n\r\n    window.map.on(\"moveend\", fetchPlaces);\r\n    fetchPlaces();\r\n}\r\n\r\n// Listen for map initialization event\r\ndocument.addEventListener(\"map_initialized\", function() {\r\n    console.log(\"Map initialized event received in LZ spots module\");\r\n    // Give a slight delay to ensure map is fully ready\r\n    setTimeout(initSpotLZ, 100);\r\n});\r\n\r\n// Alternative initialization approach - also try to init if we missed the event\r\nsetTimeout(() => {\r\n    if (window.mapInitialized) {\r\n        console.log(\"Backup initialization for LZ spots module\");\r\n        initSpotLZ();\r\n    }\r\n}, 1000);\r\n\r\n","// With these\r\nimport './L.Control.Layers.Tree.js';\r\nimport '../css/L.Control.Layers.Tree.css';\r\nimport '../css/styles.css';\r\n\r\n\r\nimport './../../../components/airspaces.js';\r\nimport './../../../components/windstations.js';\r\nimport './../../../components/spotsPG.js';\r\nimport './../../../components/spotsHG.js';\r\nimport './../../../components/spotsLZ.js';\r\n\r\n\r\n// Initialize map and make necessary objects globally available\r\nfunction initMap() {\r\n  // Create the map object and make it globally accessible\r\n  window.map = L.map('map', {\r\n      center: [50, 6],\r\n      zoom: 11,\r\n      zoomControl: false,\r\n      layers: [] \r\n  });\r\n  \r\n  L.control.zoom({\r\n      position: 'bottomright',\r\n  }).addTo(window.map);\r\n\r\n  // Base Layers\r\n  var awgTerrain = L.tileLayer('https://tile.jawg.io/jawg-terrain/{z}/{x}/{y}{r}.png?access-token=qBDXRu1KSlZGhx4ROlceBD9hcxmrumL34oj29tUkzDVkafqx08tFWPeRNb0KSoKa', {\r\n      attribution: 'Jawg.io terrain'\r\n  }).addTo(window.map);\r\n  \r\n  var osm = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '© OpenStreetMap contributors'\r\n  });\r\n  \r\n  var xcontest = L.tileLayer('https://topo.xcontest.app/elev/{z}/{x}/{y}.jpg', {\r\n      attribution: 'XContest&copy; <a href=\"https://www.xcontest.org\">XContest</a>',\r\n      className: 'xcontest-layer'\r\n  });\r\n\r\n  // MapLibre GL layer\r\n  var mapTilerTerrain = L.mapboxGL({\r\n      style: '/assets/maps/maptiler_terrain_wob_testxc.json',\r\n      apiKey: \"c49iG8J3xvAkgCSZ8M8v\",\r\n      className: 'xcmap-layer'\r\n  });\r\n  \r\n  var sat = L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}',{\r\n      maxZoom: 20,\r\n      subdomains:['mt0','mt1','mt2','mt3']\r\n  });\r\n   \r\n  // Layer groups - make them globally accessible\r\n  window.windLayer = L.layerGroup().addTo(window.map);\r\n  window.oaipMap = L.tileLayer(`https://a.api.tiles.openaip.net/api/data/openaip/{z}/{x}/{y}.png?apiKey=${process.env.OAIP_KEY}`, {\r\n      attribution: 'OpenAIP&copy; <a href=\"https://www.openaip.net\">OpenAIP</a>',\r\n      className: 'oaip-layer'\r\n  });\r\n  window.airspaceEFG = L.layerGroup([]);\r\n  window.placesLayerPG = L.layerGroup(); \r\n  window.placesLayerHG = L.layerGroup(); \r\n  window.placesLayerLZ = L.layerGroup();\r\n\r\n  // Tree structure\r\n  var baseTree = {\r\n      label: 'Base Maps',\r\n      children: [\r\n          { label: 'Terrain', layer: awgTerrain },\r\n          { label: 'XContest', layer: L.layerGroup([xcontest, mapTilerTerrain])},\r\n          { label: 'OpenStreetMap', layer: osm },\r\n          { label: 'Satellite', layer: L.layerGroup([mapTilerTerrain, sat])}\r\n      ]\r\n  };\r\n\r\n  var overlayTree = {\r\n      label: 'Overlays',\r\n      children: [\r\n          { label: 'Wind Stations', layer: window.windLayer, checked: true },\r\n          { label: 'Spots',              \r\n              children: [\r\n                  { label: 'Take-off PG', layer: window.placesLayerPG },\r\n                  { label: 'Take-off HG', layer: window.placesLayerHG },\r\n                  { label: 'Landing Zones', layer: window.placesLayerLZ },\r\n              ]\r\n          },\r\n          { label: 'Airspaces', \r\n              children: [\r\n                  { label: 'Airspaces', layer: window.airspaceEFG },\r\n                  { label: 'Gliding', layer: window.airspaceEFG },\r\n                  { label: 'Notam', layer: window.airspaceEFG },\r\n                  { label: 'OpenAIP Map', layer: window.oaipMap},\r\n              ]\r\n          }\r\n      ]\r\n  };\r\n\r\n  // Add info control\r\n  var InfoControl = L.Control.extend({\r\n      onAdd: function(map) {\r\n          var container = L.DomUtil.create('div', 'info-control leaflet-bar leaflet-control');\r\n          var link = L.DomUtil.create('a', 'leaflet-control-button', container);\r\n          link.href = '#';\r\n          // Create image element instead of text\r\n          var img = L.DomUtil.create('img', 'info-control-icon', link);\r\n          img.src = 'assets/images/info.png';\r\n          img.alt = 'Information';\r\n          img.style.width = '24px';\r\n          img.style.height = '24px';\r\n          img.style.padding = '4px';\r\n\r\n          L.DomEvent.disableClickPropagation(container);\r\n          L.DomEvent.on(link, 'click', function(e) {\r\n              L.DomEvent.stop(e);\r\n              var popupContent = '<div style=\"padding: 10px; max-width: 800px;\"><h3>About XC Maps</h3>' +\r\n                  '<p><strong>Data Sources:</strong></p>' +\r\n                  '<ul>' +\r\n                  '<li>Terrain tiles by <a href=\"https://www.jawg.io\" target=\"_blank\">Jawg</a></li>' +\r\n                  '<li>OpenStreetMap contributors</li>' +\r\n                  '<li>XContest terrain data</li>' +\r\n                  '<li>MapTiler for GL layer</li>' +\r\n                  '<li>OpenAIP airspace data: Airspaces are imported from openaip:\"OpenAIP data is not certified and must not be used for primary navigation or flight planning. Never rely on openAIP data! OpenAIP data contains errors. Using openAIP data may result in serious injury or death.\"</li>' +\r\n                  '</ul>' +\r\n                  '<p>This map combines various data sources for aerial sports navigation.</p></div>';\r\n              \r\n              L.popup({ className: 'info-popup', autoPan: true })\r\n                  .setLatLng(map.getCenter())\r\n                  .setContent(popupContent)\r\n                  .openOn(map);\r\n          });\r\n\r\n          return container;\r\n      }\r\n  });\r\n\r\n  new InfoControl({ position: 'bottomright' }).addTo(window.map);\r\n\r\n  // Add locate control\r\n  var lc = L.control\r\n      .locate({  \r\n          drawCircle: false, \r\n          keepCurrentZoomLevel: true,\r\n          position: 'bottomright',\r\n          icon: 'locate',\r\n          iconLoading: 'loading',\r\n          iconElementTag: 'div'\r\n      }).addTo(window.map);\r\n\r\n  // Add layer control tree\r\n  var treeLayersControl = L.control.layers.tree(baseTree, overlayTree, {\r\n      namedToggle: true,\r\n      collapsed: false\r\n  }).addTo(window.map);\r\n\r\n  treeLayersControl.collapseTree().expandSelected();\r\n  \r\n  // Signal that the map is fully initialized\r\n  window.mapInitialized = true;\r\n  console.log(\"Map initialization complete\");\r\n  \r\n  // Trigger an event that component scripts can listen for\r\n  const mapReadyEvent = new Event('map_initialized');\r\n  document.dispatchEvent(mapReadyEvent);\r\n  console.log(\"Map initialized event dispatched\");\r\n  \r\n  return window.map;\r\n}\r\n\r\n// Wait for DOM to be fully loaded\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  console.log(\"DOM content loaded, initializing map\");\r\n  // Initialize the map\r\n  const map = initMap();\r\n\r\n  // Attach moveend event listener after ensuring map is created\r\n  map.on('moveend', function () {\r\n    console.log('Map moveend event triggered');\r\n    if (window.fetchWindStations) {\r\n        console.log('Fetching wind stations after map move...');\r\n        window.fetchWindStations();\r\n    } else {\r\n        console.warn(\"fetchWindStations is not available yet.\");\r\n    }  \r\n  });\r\n  \r\n  // Setup geolocation after map is initialized\r\n  navigator.geolocation.getCurrentPosition(position => {\r\n      console.log(\"Geolocation received\");\r\n      const userLat = position.coords.latitude;\r\n      const userLng = position.coords.longitude;\r\n      map.setView([userLat, userLng], 10);\r\n      \r\n      // Create a user location ready event\r\n      const locationReadyEvent = new CustomEvent('user_location_ready', {\r\n          detail: { lat: userLat, lng: userLng }\r\n      });\r\n      document.dispatchEvent(locationReadyEvent);\r\n      console.log(\"User location event dispatched\");\r\n  });\r\n});\r\n\r\n\r\n// Function to dynamically load scripts\r\nfunction loadScript(url, isModule = false) {\r\n  return new Promise((resolve, reject) => {\r\n      const script = document.createElement('script');\r\n      script.src = url;\r\n      if (isModule) {\r\n          script.type = 'module';\r\n      }\r\n      script.onload = () => {\r\n          console.log(`Loaded script: ${url}`);\r\n          resolve();\r\n      };\r\n      script.onerror = (error) => {\r\n          console.error(`Failed to load script: ${url}`, error);\r\n          reject(error);\r\n      };\r\n      document.body.appendChild(script);\r\n  });\r\n}\r\n\r\nconsole.log('fetchWindStations type:', typeof window.fetchWindStations);\r\n\r\n// Load component scripts after map is initialized\r\ndocument.addEventListener('map_initialized', async function() {\r\n  console.log(\"Loading component scripts\");\r\n  try {\r\n      // Load regular scripts first\r\n      await loadScript('../components/windstations.js');\r\n      await loadScript('../components/airspaces.js');\r\n\r\n        // Add event listener for map moveend to update wind stations\r\n      window.map.on('moveend', function() {\r\n        console.log('Map moveend event triggered'); // Add this\r\n          if (typeof window.fetchWindStations === 'function') {\r\n              console.log('Map moved, fetching wind stations...');\r\n              window.fetchWindStations();\r\n          }\r\n      });\r\n      \r\n    // Verify listener count\r\n    console.log(\"Moveend listeners:\", window.map.listens('moveend'));\r\n  \r\n      // Load module scripts with a slight delay to ensure regular scripts are fully processed\r\n      setTimeout(async () => {\r\n          try {\r\n              await loadScript('../components/spotsPG.js', true);\r\n              await loadScript('../components/spotsHG.js', true);\r\n              await loadScript('../components/spotsLZ.js', true);\r\n              console.log('All module scripts loaded successfully');\r\n          } catch (moduleError) {\r\n              console.error('Failed to load module scripts:', moduleError);\r\n          }\r\n      }, 500);\r\n      \r\n      console.log('Regular scripts loaded successfully');\r\n  } catch (error) {\r\n      console.error('Failed to load component scripts:', error);\r\n  }\r\n});\r\n\r\n// Special patch for windstations.js and airspaces.js\r\ndocument.addEventListener('user_location_ready', function(e) {\r\n  console.log(\"Handling user location ready event\");\r\n  setTimeout(() => {\r\n      // Only call these functions if they exist and the map is fully initialized\r\n      if (typeof fetchWindStations === 'function' && window.mapInitialized) {\r\n          try {\r\n              console.log(\"Fetching wind stations\");\r\n              fetchWindStations(e.detail.lat, e.detail.lng);\r\n          } catch (error) {\r\n              console.error('Error fetching wind  stations:', error);\r\n          }\r\n      } else {\r\n          console.warn(\"fetchWindStations not available yet\");\r\n      }\r\n      \r\n      if (typeof fetchAirspaces === 'function' && window.mapInitialized) {\r\n          try {\r\n              console.log(\"Fetching airspaces\");\r\n              fetchAirspaces();\r\n          } catch (error) {\r\n              console.error('Error fetching airspaces:', error);\r\n          }\r\n      } else {\r\n          console.warn(\"fetchAirspaces not available yet\");\r\n      }\r\n  }, 500); // Give a short delay to ensure all scripts are loaded\r\n});\r\n\r\n"],"names":["fetchAirspaces","window","map","center","getCenter","lat","toFixed","lng","apiUrl","concat","fetch","then","response","json","data","airspaceEFG","clearLayers","airspaces","items","forEach","airspace","type","icaoClass","geometry","coordinates","coord","color","lowerLimit","value","polygon","airspaceTypes","icaoClasses","L","weight","fillOpacity","push","addLayer","console","log","length","off","on","e","clickedPoint","latlng","overlappingAirspaces","_ref","getBounds","contains","popupContent","a","name","getUnit","unit","upperLimit","join","popup","setLatLng","setContent","openOn","error","Error","Control","Layers","Tree","extend","options","closedSymbol","openedSymbol","spaceSymbol","selectorBack","namedToggle","collapseAll","expandAll","labelIsSelector","_initClassesNames","this","cls","children","childrenNopad","hide","closed","opened","space","pointer","header","neverShow","node","label","selAllCheckbox","initialize","baseTree","overlaysTree","_scrollTop","_baseTree","_overlaysTree","Util","setOptions","prototype","call","_setTrees","setBaseTree","tree","setOverlayTree","undefined","addBaseLayer","_layer","_name","addOverlay","removeLayer","collapse","_sect","scrollTop","expand","onAdd","changeName","layer","_layersTreeName","toggle","innerHTML","ret","_container","getElementsByClassName","DomUtil","addClass","eachLayer","expandTree","overlay","container","_overlaysList","_baseLayersList","_applyOnTree","_localExpand","collapseTree","expandSelected","iter","el","p","parentElement","hasClass","that","removeClass","h","inputs","_layerControlInputs","getElementsByTagName","i","input","_getLayer","layerId","checked","_section","_form","base","overlays","id","iterate","output","child","forArrays","Array","isArray","noShow","_layers","_onLayerChange","bflat","j","_addLayer","oflat","k","_map","_update","top","it","els","_addItem","_obj","_addTreeLayout","_expandCollapseAll","_iterateTreeLayout","_checkDisabledLayers","text","fn","ctx","o","document","createElement","className","appendChild","tabIndex","DomEvent","keyCode","blur","selAllNodes","selAll","creator","sel","entry","insertBefore","selectAllCheckbox","_createCheckboxElement","sensible","_preventClick","splice","variable","hasLayer","radioGroup","stamp","_createRadioElement","manageSelectorsAll","_onInputClick","String","title","ev","stopPropagation","selectAllCheckboxes","updateSelAllCheckbox","collapsed","eventeds","eventedClasses","evented","obj","querySelector","event","selectAll","functionToCheck","select","toString","append","create","ancestor","selector","selectedAll","selectedNone","querySelectorAll","inp","indeterminate","_ev","defaultChecked","control","layers","unitCode","getCompassDirection","deg","Math","round","getFillColor","speed","getStrokeColor","getTextColor","backgroundColor","_regeneratorRuntime","t","r","Object","n","hasOwnProperty","defineProperty","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","changeSwiper","swiperc","innerWidth","$","css","changeDirection","initSwiper","idImg","swiperv","swiperLoop3","swiperLoop4","Swiper","autoHeight","direction","allowTouchMove","mousewheel","slidesPerView","loop","spaceBetween","breakpoints","scrollbar","draggable","click","iR","clickedSlide","firstChild","substring","slideTo","transitionEnd","realIndex","getAngleRange","dirToAngle","angleRanges","split","part","trim","range","dir","angle","start","end","_ref2","loadPlaceDetails","_x","_x2","_loadPlaceDetails","_callee2","placeId","regex1","regex2","description","_context2","properties","replace","currentPlaceName","setPopupContent","setTimeout","firstImg","parseInt","addEventListener","closePopup","t0","showFeebackForm","modalFooter","style","display","feedbackFormHtml","insertAdjacentHTML","uploadedFiles","Dropzone","url","autoProcessQueue","maxFiles","maxFilesize","acceptedFiles","addRemoveLinks","dictDefaultMessage","clickable","init","dzInstance","file","imageContainer","previewElement","deleteIcon","src","alt","classList","add","preventDefault","removeFile","filter","getElementById","isValid","test","_ref3","_callee","formData","result","messageDiv","_context","FormData","forElement","files","body","success","textContent","remove","_x3","cancelFeedback","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_arrayLikeToArray","from","_unsupportedIterableToArray","_nonIterableRest","initSpotPG","placesLayerPG","clusterGroup","markerClusterGroup","disableClusteringAtZoom","spiderfyOnMaxZoom","showCoverageOnHover","zoomToBoundsOnClick","maxClusterRadius","iconCreateFunction","cluster","divIcon","html","getChildCount","iconSize","point","fetchPlaces","bounds","nw_lat","getNorthWest","nw_lng","se_lat","getSouthEast","se_lng","geoJSON","pointToLayer","feature","marker","icon","canvasIcon","iconAnchor","drawIcon","getContext","size","x","clearRect","beginPath","moveTo","arc","PI","lineTo","fillStyle","fill","closePath","onEachFeature","responsivePopup","hasTip","autoPan","offset","maxWidth","maxHeight","bindPopup","initSpotHG","placesLayerHG","initSpotLZ","placesLayerLZ","iconUrl","loadScript","isModule","reject","script","onload","onerror","showTab","tabId","element","tab","targetTab","startsWith","stationId","canvas","chartInstance","resize","update","warn","fetchWindStations","nwLat","nwLng","seLat","seLng","responseData","windLayer","station","_station$loc$coordina","loc","lon","windDirection","last","windAvg","windMax","compassDirection","lastUpdate","Date","toLocaleTimeString","hour","minute","fillColor","strokeColor","peakArrow","peak","isHolfuy","_id","includes","holfuyStationId","arrowSvg","arrowIcon","addTo","historyData","aggregatedData","grouped","dt","setMinutes","floor","getMinutes","setSeconds","setMilliseconds","key","getTime","count","wAvgSum","wMaxSum","wDirSum","tempSum","tempCount","sort","b","processHistoricalData","fiveHoursAgo","now","limitedData","historyTable","timeFormatted","compassDir","chartData","popupHtml","height","chartDataPointsAvg","chartDataPointsMax","Chart","datasets","borderColor","pointRadius","responsive","maintainAspectRatio","layout","padding","bottom","scales","time","displayFormats","tooltipFormat","grid","drawBorder","ticks","autoSkip","maxRotation","minRotation","beginAtZero","stepSize","maxTicksLimit","font","plugins","legend","afterDraw","chart","xAxis","save","arrowRowY","textAlign","textBaseline","getPixelForValue","translate","rotate","fillText","restore","cameraImageUrl","cameraImageElement","cameraTabElement","testImage","Image","naturalWidth","mapInitialized","zoom","zoomControl","position","awgTerrain","tileLayer","attribution","osm","xcontest","mapTilerTerrain","mapboxGL","apiKey","sat","maxZoom","subdomains","layerGroup","oaipMap","process","overlayTree","link","href","img","width","disableClickPropagation","locate","drawCircle","keepCurrentZoomLevel","iconLoading","iconElementTag","mapReadyEvent","Event","dispatchEvent","initMap","navigator","geolocation","getCurrentPosition","userLat","coords","latitude","userLng","longitude","setView","locationReadyEvent","CustomEvent","detail","listens"],"sourceRoot":""}