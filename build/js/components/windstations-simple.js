function fetchWindStations(){console.log("Fetching wind stations..."),console.log("Wind layers cleared");const t=window.map?window.map.getBounds():null;if(!t)return void console.error("Map bounds not available");const n=t.getNorthWest().lat,e=t.getNorthWest().lng,i=t.getSouthEast().lat,o=t.getSouthEast().lng;fetch(`/api/wind-data-getCurrent?nwLat=${n}&nwLng=${e}&seLat=${i}&seLng=${o}`).then((t=>t.json())).then((t=>{t.forEach((t=>{const n=L.marker([t.lat,t.lon],{icon:L.icon({iconUrl:"/assets/images/wind-icon.png",iconSize:[24,24],iconAnchor:[12,12],popupAnchor:[0,-12]})});fetch(`https://winds.mobi/api/2.3/stations/${t._id}/historic/?duration=21000&keys=w-dir&keys=w-avg&keys=w-max&keys=temp`).then((t=>t.json())).then((e=>{const i=createHistoryTable(e),o=`\n              <style>\n                .tab-container {\n                  display: flex;\n                  border-bottom: 1px solid #ddd;\n                  padding: 10px 10px 0;\n                  background-color: #f5f5f5;\n                }\n                \n                .tab {\n                  padding: 8px 12px;\n                  margin-right: 5px;\n                  margin-bottom: 5px;\n                  background-color: #e0e0e0;\n                  border-radius: 4px 4px 0 0;\n                  cursor: pointer;\n                }\n                \n                .tab.active {\n                  background-color: #fff;\n                  border: 1px solid #ddd;\n                  border-bottom: 1px solid #fff;\n                  margin-bottom: -1px;\n                }\n                \n                .tab-content {\n                  padding: 10px;\n                  display: none;\n                }\n                \n                .wind-data-table {\n                  width: 100%;\n                  border-collapse: collapse;\n                }\n                \n                .wind-data-table th, .wind-data-table td {\n                  padding: 8px;\n                  text-align: left;\n                  border-bottom: 1px solid #ddd;\n                }\n                \n                .wind-data-table th {\n                  background-color: #f5f5f5;\n                }\n                \n                @media (max-width: 480px) {\n                  .tab {\n                    padding: 6px 10px;\n                    font-size: 12px;\n                  }\n                  \n                  .wind-data-table th, .wind-data-table td {\n                    padding: 5px 3px;\n                    font-size: 12px;\n                  }\n                  \n                  .wind-rose {\n                    display: none;\n                  }\n                }\n              </style>\n              <div class="tab-container">\n                <div class="tab active" onclick="showTab('table-${t._id}', this)">Table</div>\n                <div class="tab" onclick="showTab('chart-${t._id}', this)">Chart</div>\n                <div class="tab" onclick="showTab('camera-${t._id}', this)">Camera</div>\n              </div>\n              <div id="table-${t._id}" class="tab-content">\n                ${i}\n              </div>\n              <div id="chart-${t._id}" class="tab-content chart-container" style="display: none;">\n                <canvas id="canvas-${t._id}" width="100%" height="200"></canvas>\n              </div>\n              <div id="camera-${t._id}" class="tab-content" style="display: none;">\n                <img id="camera-image-${t._id}" src="" alt="Camera Image" style="width: 100%; height: auto;">\n              </div>\n            `,a=window.innerWidth<=480,d={maxWidth:a?window.innerWidth-20:400,className:"wind-station-responsive-popup"+(a?" mobile-popup":"")};n.bindPopup(o,d),n.on("popupopen",(()=>{setTimeout((()=>{const n=document.getElementById(`canvas-${t._id}`);if(n){const t=window.innerWidth<=480,i=n.parentElement,o=i?i.clientWidth:window.innerWidth-40,a=t?200:300;n.style.width=o+"px",n.style.height=a+"px",n.width=o,n.height=a,n.style.display="block",i&&(i.style.display="flex",i.style.justifyContent="center",i.style.alignItems="center",i.offsetHeight),console.log(`Canvas dimensions set: ${n.width}x${n.height}`);const d=n.getContext("2d");if(d){const t=e.map((t=>({x:1e3*t._id,y:t["w-avg"]}))),i=e.map((t=>({x:1e3*t._id,y:t["w-max"]}))),o=new Chart(d,{type:"line",data:{datasets:[{label:"Wind Avg (km/h)",data:t,borderColor:"blue",fill:!1,pointRadius:3},{label:"Wind Max (km/h)",data:i,borderColor:"red",fill:!1,pointRadius:3}]},options:{responsive:!0,maintainAspectRatio:!1,animation:{duration:0},resizeDelay:0,layout:{padding:{left:2,right:2,top:2,bottom:5}},plugins:{legend:{display:!1},tooltip:{enabled:!0,mode:"index",intersect:!1,callbacks:{title:function(t){return new Date(t[0].parsed.x).toLocaleTimeString("de-DE",{hour:"2-digit",minute:"2-digit"})}}}},scales:{x:{type:"time",time:{unit:"hour",displayFormats:{hour:"HH:mm"},tooltipFormat:"HH:mm"},grid:{drawBorder:!0,color:"rgba(0,0,0,0.1)"},ticks:{autoSkip:!0,maxRotation:0,minRotation:0,padding:5,maxTicksLimit:window.innerWidth<=480?4:8}},y:{beginAtZero:!0,grid:{drawBorder:!0,color:"rgba(0,0,0,0.1)"},ticks:{padding:5,maxTicksLimit:5}}}}});n.chartInstance=o}}if(t.camera&&t.camera.url){const n=t.camera.url,e=document.getElementById(`camera-image-${t._id}`),i=document.getElementById(`camera-${t._id}`);e&&(e.src=n);const o=new Image;o.onload=function(){i&&(i.style.display="block")},o.onerror=function(){i&&(i.style.display="none")},o.src=n,setTimeout((()=>{o.complete&&0!==o.naturalWidth||i&&(i.style.display="none")}),2e3)}}),500)}))})).catch((t=>{console.error("Error fetching historical wind data:",t)}))}))})).catch((t=>{console.error("Error fetching wind station data:",t)}))}function createHistoryTable(t){let n='\n    <table class="wind-data-table">\n      <thead>\n        <tr>\n          <th>Time</th>\n          <th>Wind Avg</th>\n          <th>Wind Max</th>\n          <th>Direction</th>\n        </tr>\n      </thead>\n      <tbody>\n  ';return t.forEach((t=>{const e=new Date(1e3*t._id).toLocaleTimeString("de-DE",{hour:"2-digit",minute:"2-digit"});n+=`\n      <tr>\n        <td>${e}</td>\n        <td>${t["w-avg"]} km/h</td>\n        <td>${t["w-max"]} km/h</td>\n        <td>${t["w-dir"]}</td>\n      </tr>\n    `})),n+="\n      </tbody>\n    </table>\n  ",n}window.showTab=function(t,n){console.log("Switching to tab:",t);const e=window.innerWidth<=480,i=n?n.closest(".mobile-popup"):null;if(e&&i){n&&(document.querySelectorAll(".tab").forEach((t=>{t.classList.remove("active")})),n.classList.add("active")),document.querySelectorAll(".tab-content").forEach((t=>{t.style.display="block"}));const e=document.getElementById(t);e&&e.scrollIntoView({behavior:"smooth"})}else{document.querySelectorAll(".tab-content").forEach((t=>{t.style.display="none"})),document.querySelectorAll(".tab").forEach((t=>{t.classList.remove("active")}));const e=document.getElementById(t);e?(e.style.display="block",e.offsetHeight):console.error("Tab not found:",t),n?n.classList.add("active"):console.error("Element is null or undefined")}if(t.startsWith("chart-")){const n=t.split("chart-")[1];console.log("Station ID:",n);const e=document.getElementById(`canvas-${n}`);if(e){e.style.display="block";const n=document.getElementById(t),i=window.innerWidth<=480;let o;if(o=i?window.innerWidth-20:n?n.clientWidth:400,e.style.width=o+"px",e.style.height=(i?200:300)+"px",e.width=o,e.height=i?200:300,n&&n.offsetHeight,e.chartInstance){setTimeout((()=>{try{e.chartInstance.resize(),console.log("Chart resized successfully")}catch(t){console.error("Error resizing chart:",t)}}),100);const t=()=>{if(e&&e.chartInstance){const t=window.innerWidth<=480,i=t?window.innerWidth-20:n?n.clientWidth:400;e.style.width=i+"px",e.style.height=(t?200:300)+"px",e.width=i,e.height=t?200:300;try{e.chartInstance.resize(),console.log("Chart resized on window resize in tab view")}catch(t){console.error("Error resizing chart:",t)}}};e.resizeHandler&&window.removeEventListener("resize",e.resizeHandler),window.addEventListener("resize",t),e.resizeHandler=t}}}},window.fetchWindStations=fetchWindStations;